State 186 conflicts: 1 shift/reduce


Grammar

    0 $accept: program "EOF"

    1 program: global_declarations main_function "EOF"
    2        | /* empty */

    3 global_declarations: global_declarations global_declaration
    4                    | /* empty */

    5 global_declaration: typedef_declaration
    6                   | enum_declaration
    7                   | class_declaration
    8                   | union_declaration
    9                   | global_var_declaration
   10                   | func_declaration

   11 typedef_declaration: "typedef" typename listspec "id" dims ";"

   12 typename: standard_type
   13         | "id"

   14 standard_type: "char"
   15              | "int"
   16              | "float"
   17              | "string"
   18              | "void"

   19 listspec: "list"
   20         | /* empty */

   21 dims: dims dim
   22     | /* empty */

   23 dim: "[" "iconst" "]"
   24    | "[" "]"

   25 enum_declaration: "enum" "id" enum_body ";"

   26 enum_body: "{" id_list "}"

   27 id_list: id_list "," "id" initializer
   28        | "id" initializer

   29 initializer: "=" init_value
   30            | /* empty */

   31 init_value: expression
   32           | "{" init_values "}"

   33 expression: expression "||" expression
   34           | expression "&&" expression
   35           | expression "==" expression
   36           | expression ">" expression
   37           | expression "+" expression
   38           | expression "*" expression
   39           | "!" expression
   40           | "+" expression
   41           | "sizeop" expression
   42           | "++" variable
   43           | variable "++"
   44           | variable
   45           | variable "(" expression_list ")"
   46           | "length" "(" general_expression ")"
   47           | "new" "(" general_expression ")"
   48           | constant
   49           | "(" general_expression ")"
   50           | "(" standard_type ")"
   51           | listexpression

   52 variable: variable "[" general_expression "]"
   53         | variable "." "id"
   54         | "listfunc" "(" general_expression ")"
   55         | decltype "id"
   56         | "this"

   57 general_expression: general_expression "," general_expression
   58                   | assignment

   59 assignment: variable "=" assignment
   60           | expression
   61           | error

   62 expression_list: general_expression
   63                | /* empty */

   64 constant: "cconst"
   65         | "iconst"
   66         | "fconst"
   67         | "sconst"

   68 listexpression: "[" expression_list "]"

   69 init_values: init_values "," init_value
   70            | init_value

   71 class_declaration: "class" "id" class_body ";"

   72 class_body: parent "{" members_methods "}"

   73 parent: ":" "id"
   74       | /* empty */

   75 members_methods: members_methods access member_or_method
   76                | access member_or_method

   77 access: "private" ":"
   78       | "protected" ":"
   79       | "public" ":"
   80       | /* empty */

   81 member_or_method: member
   82                 | method

   83 member: var_declaration
   84       | anonymous_union

   85 var_declaration: typename variabledefs ";"
   86                | typename variabledefs error

   87 variabledefs: variabledefs "," variabledef
   88             | variabledef

   89 variabledef: listspec "id" dims

   90 anonymous_union: "union" union_body ";"

   91 union_body: "{" fields "}"

   92 fields: fields field
   93       | field

   94 field: var_declaration

   95 method: short_func_declaration

   96 short_func_declaration: short_par_func_header ";"
   97                       | nopar_func_header ";"

   98 short_par_func_header: func_header_start "(" parameter_types ")"

   99 func_header_start: typename listspec "id"

  100 parameter_types: parameter_types "," typename pass_list_dims
  101                | typename pass_list_dims

  102 pass_list_dims: "refer"
  103               | listspec dims

  104 nopar_func_header: func_header_start "(" ")"

  105 union_declaration: "union" "id" union_body ";"

  106 global_var_declaration: typename init_variabledefs ";"

  107 init_variabledefs: init_variabledefs "," init_variabledef
  108                  | init_variabledef

  109 init_variabledef: variabledef initializer

  110 func_declaration: short_func_declaration
  111                 | full_func_declaration
  112                 | error

  113 $@1: /* empty */

  114 full_func_declaration: full_par_func_header "{" $@1 decl_statements "}"

  115 $@2: /* empty */

  116 full_func_declaration: nopar_class_func_header "{" $@2 decl_statements "}"

  117 $@3: /* empty */

  118 full_func_declaration: nopar_func_header "{" $@3 decl_statements "}"

  119 full_par_func_header: class_func_header_start "(" parameter_list ")"
  120                     | func_header_start "(" parameter_list ")"

  121 class_func_header_start: typename listspec func_class "id"

  122 func_class: "id" "meth"

  123 parameter_list: parameter_list "," typename pass_variabledef
  124               | typename pass_variabledef

  125 pass_variabledef: variabledef
  126                 | "refer" "id"

  127 nopar_class_func_header: class_func_header_start "(" ")"

  128 decl_statements: declarations statements
  129                | declarations
  130                | /* empty */

  131 declarations: declarations decltype typename variabledefs ";"
  132             | decltype typename variabledefs ";"

  133 decltype: "static"
  134         | /* empty */

  135 statements: statements statement
  136           | statement

  137 statement: expression_statement
  138          | if_statement
  139          | while_statement
  140          | for_statement
  141          | switch_statement
  142          | return_statement
  143          | io_statement
  144          | comp_statement
  145          | "continue" ";"
  146          | "break" ";"
  147          | ";"

  148 expression_statement: general_expression ";"
  149                     | error ";"

  150 $@4: /* empty */

  151 if_statement: "if" "(" general_expression ")" $@4 statement if_tail

  152 if_tail: "else" statement
  153        | /* empty */

  154 $@5: /* empty */

  155 while_statement: "while" "(" general_expression ")" $@5 statement

  156 $@6: /* empty */

  157 for_statement: "for" "(" optexpr ";" optexpr ";" optexpr ")" $@6 statement

  158 optexpr: general_expression
  159        | /* empty */

  160 $@7: /* empty */

  161 switch_statement: "switch" "(" general_expression ")" $@7 switch_tail

  162 switch_tail: "{" decl_cases "}"
  163            | single_casestatement

  164 decl_cases: declarations casestatements
  165           | declarations
  166           | casestatements
  167           | /* empty */

  168 casestatements: casestatements casestatement
  169               | casestatement

  170 casestatement: "case" constant ":" casestatement
  171              | "case" constant ":" statements
  172              | "default" ":" statements

  173 single_casestatement: "case" constant ":" single_casestatement
  174                     | "case" constant ":" statement

  175 return_statement: "return" optexpr ";"

  176 io_statement: "cin" "<<" in_list ";"
  177             | "cout" ">>" out_list ";"

  178 in_list: in_list "<<" in_item
  179        | in_item

  180 in_item: variable

  181 out_list: out_list ">>" out_item
  182         | out_item

  183 out_item: general_expression

  184 $@8: /* empty */

  185 comp_statement: "{" $@8 decl_statements "}"

  186 $@9: /* empty */

  187 main_function: main_header "{" $@9 decl_statements "}"

  188 main_header: "int" "main" "(" ")"


Terminals, with rules where they appear

"EOF" (0) 0 1
error (256) 61 86 112 149
"typedef" (258) 11
"char" (259) 14
"int" (260) 15 188
"float" (261) 16
"string" (262) 17
"class" (263) 71
"private" (264) 77
"protected" (265) 78
"public" (266) 79
"void" (267) 18
"static" (268) 133
"union" (269) 90 105
"enum" (270) 25
"list" (271) 19
"continue" (272) 145
"break" (273) 146
"if" (274) 151
"else" (275) 152
"while" (276) 155
"for" (277) 157
"switch" (278) 161
"case" (279) 170 171 173 174
"default" (280) 172
"return" (281) 175
"length" (282) 46
"new" (283) 47
"cin" (284) 176
"cout" (285) 177
"main" (286) 188
"this" (287) 56
"id" (288) 11 13 25 27 28 53 55 71 73 89 99 105 121 122 126
"iconst" (289) 23 65
"fconst" (290) 66
"cconst" (291) 64
"sconst" (292) 67
"||" (293) 33
"&&" (294) 34
"==" (295) 35
">" (296) 36
"+" (297) 37 40
"*" (298) 38
"!" (299) 39
"++" (300) 42 43
"sizeop" (301) 41
"listfunc" (302) 54
"(" (303) 45 46 47 49 50 54 98 104 119 120 127 151 155 157 161 188
")" (304) 45 46 47 49 50 54 98 104 119 120 127 151 155 157 161 188
";" (305) 11 25 71 85 90 96 97 105 106 131 132 145 146 147 148 149
    157 175 176 177
"." (306) 53
"," (307) 27 57 69 87 100 107 123
"=" (308) 29 59
":" (309) 73 77 78 79 170 171 172 173 174
"[" (310) 23 24 52 68
"]" (311) 23 24 52 68
"refer" (312) 102 126
"{" (313) 26 32 72 91 114 116 118 162 185 187
"}" (314) 26 32 72 91 114 116 118 162 185 187
"meth" (315) 122
"<<" (316) 176 178
">>" (317) 177 181
LOWER_THAN_ELSE (318)


Nonterminals, with rules where they appear

$accept (64)
    on left: 0
program (65)
    on left: 1 2, on right: 0
global_declarations (66)
    on left: 3 4, on right: 1 3
global_declaration (67)
    on left: 5 6 7 8 9 10, on right: 3
typedef_declaration (68)
    on left: 11, on right: 5
typename (69)
    on left: 12 13, on right: 11 85 86 99 100 101 106 121 123 124 131
    132
standard_type (70)
    on left: 14 15 16 17 18, on right: 12 50
listspec (71)
    on left: 19 20, on right: 11 89 99 103 121
dims (72)
    on left: 21 22, on right: 11 21 89 103
dim (73)
    on left: 23 24, on right: 21
enum_declaration (74)
    on left: 25, on right: 6
enum_body (75)
    on left: 26, on right: 25
id_list (76)
    on left: 27 28, on right: 26 27
initializer (77)
    on left: 29 30, on right: 27 28 109
init_value (78)
    on left: 31 32, on right: 29 69 70
expression (79)
    on left: 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50
    51, on right: 31 33 34 35 36 37 38 39 40 41 60
variable (80)
    on left: 52 53 54 55 56, on right: 42 43 44 45 52 53 59 180
general_expression (81)
    on left: 57 58, on right: 46 47 49 52 54 57 62 148 151 155 158
    161 183
assignment (82)
    on left: 59 60 61, on right: 58 59
expression_list (83)
    on left: 62 63, on right: 45 68
constant (84)
    on left: 64 65 66 67, on right: 48 170 171 173 174
listexpression (85)
    on left: 68, on right: 51
init_values (86)
    on left: 69 70, on right: 32 69
class_declaration (87)
    on left: 71, on right: 7
class_body (88)
    on left: 72, on right: 71
parent (89)
    on left: 73 74, on right: 72
members_methods (90)
    on left: 75 76, on right: 72 75
access (91)
    on left: 77 78 79 80, on right: 75 76
member_or_method (92)
    on left: 81 82, on right: 75 76
member (93)
    on left: 83 84, on right: 81
var_declaration (94)
    on left: 85 86, on right: 83 94
variabledefs (95)
    on left: 87 88, on right: 85 86 87 131 132
variabledef (96)
    on left: 89, on right: 87 88 109 125
anonymous_union (97)
    on left: 90, on right: 84
union_body (98)
    on left: 91, on right: 90 105
fields (99)
    on left: 92 93, on right: 91 92
field (100)
    on left: 94, on right: 92 93
method (101)
    on left: 95, on right: 82
short_func_declaration (102)
    on left: 96 97, on right: 95 110
short_par_func_header (103)
    on left: 98, on right: 96
func_header_start (104)
    on left: 99, on right: 98 104 120
parameter_types (105)
    on left: 100 101, on right: 98 100
pass_list_dims (106)
    on left: 102 103, on right: 100 101
nopar_func_header (107)
    on left: 104, on right: 97 118
union_declaration (108)
    on left: 105, on right: 8
global_var_declaration (109)
    on left: 106, on right: 9
init_variabledefs (110)
    on left: 107 108, on right: 106 107
init_variabledef (111)
    on left: 109, on right: 107 108
func_declaration (112)
    on left: 110 111 112, on right: 10
full_func_declaration (113)
    on left: 114 116 118, on right: 111
$@1 (114)
    on left: 113, on right: 114
$@2 (115)
    on left: 115, on right: 116
$@3 (116)
    on left: 117, on right: 118
full_par_func_header (117)
    on left: 119 120, on right: 114
class_func_header_start (118)
    on left: 121, on right: 119 127
func_class (119)
    on left: 122, on right: 121
parameter_list (120)
    on left: 123 124, on right: 119 120 123
pass_variabledef (121)
    on left: 125 126, on right: 123 124
nopar_class_func_header (122)
    on left: 127, on right: 116
decl_statements (123)
    on left: 128 129 130, on right: 114 116 118 185 187
declarations (124)
    on left: 131 132, on right: 128 129 131 164 165
decltype (125)
    on left: 133 134, on right: 55 131 132
statements (126)
    on left: 135 136, on right: 128 135 171 172
statement (127)
    on left: 137 138 139 140 141 142 143 144 145 146 147, on right:
    135 136 151 152 155 157 174
expression_statement (128)
    on left: 148 149, on right: 137
if_statement (129)
    on left: 151, on right: 138
$@4 (130)
    on left: 150, on right: 151
if_tail (131)
    on left: 152 153, on right: 151
while_statement (132)
    on left: 155, on right: 139
$@5 (133)
    on left: 154, on right: 155
for_statement (134)
    on left: 157, on right: 140
$@6 (135)
    on left: 156, on right: 157
optexpr (136)
    on left: 158 159, on right: 157 175
switch_statement (137)
    on left: 161, on right: 141
$@7 (138)
    on left: 160, on right: 161
switch_tail (139)
    on left: 162 163, on right: 161
decl_cases (140)
    on left: 164 165 166 167, on right: 162
casestatements (141)
    on left: 168 169, on right: 164 166 168
casestatement (142)
    on left: 170 171 172, on right: 168 169 170
single_casestatement (143)
    on left: 173 174, on right: 163 173
return_statement (144)
    on left: 175, on right: 142
io_statement (145)
    on left: 176 177, on right: 143
in_list (146)
    on left: 178 179, on right: 176 178
in_item (147)
    on left: 180, on right: 178 179
out_list (148)
    on left: 181 182, on right: 177 181
out_item (149)
    on left: 183, on right: 181 182
comp_statement (150)
    on left: 185, on right: 144
$@8 (151)
    on left: 184, on right: 185
main_function (152)
    on left: 187, on right: 1
$@9 (153)
    on left: 186, on right: 187
main_header (154)
    on left: 188, on right: 187


state 0

    0 $accept: . program "EOF"

    "EOF"     reduce using rule 2 (program)
    $default  reduce using rule 4 (global_declarations)

    program              go to state 1
    global_declarations  go to state 2


state 1

    0 $accept: program . "EOF"

    "EOF"  shift, and go to state 3


state 2

    1 program: global_declarations . main_function "EOF"
    3 global_declarations: global_declarations . global_declaration

    error      shift, and go to state 4
    "typedef"  shift, and go to state 5
    "char"     shift, and go to state 6
    "int"      shift, and go to state 7
    "float"    shift, and go to state 8
    "string"   shift, and go to state 9
    "class"    shift, and go to state 10
    "void"     shift, and go to state 11
    "union"    shift, and go to state 12
    "enum"     shift, and go to state 13
    "id"       shift, and go to state 14

    global_declaration       go to state 15
    typedef_declaration      go to state 16
    typename                 go to state 17
    standard_type            go to state 18
    enum_declaration         go to state 19
    class_declaration        go to state 20
    short_func_declaration   go to state 21
    short_par_func_header    go to state 22
    func_header_start        go to state 23
    nopar_func_header        go to state 24
    union_declaration        go to state 25
    global_var_declaration   go to state 26
    func_declaration         go to state 27
    full_func_declaration    go to state 28
    full_par_func_header     go to state 29
    class_func_header_start  go to state 30
    nopar_class_func_header  go to state 31
    main_function            go to state 32
    main_header              go to state 33


state 3

    0 $accept: program "EOF" .

    $default  accept


state 4

  112 func_declaration: error .

    $default  reduce using rule 112 (func_declaration)


state 5

   11 typedef_declaration: "typedef" . typename listspec "id" dims ";"

    "char"    shift, and go to state 6
    "int"     shift, and go to state 34
    "float"   shift, and go to state 8
    "string"  shift, and go to state 9
    "void"    shift, and go to state 11
    "id"      shift, and go to state 14

    typename       go to state 35
    standard_type  go to state 18


state 6

   14 standard_type: "char" .

    $default  reduce using rule 14 (standard_type)


state 7

   15 standard_type: "int" .
  188 main_header: "int" . "main" "(" ")"

    "main"  shift, and go to state 36

    $default  reduce using rule 15 (standard_type)


state 8

   16 standard_type: "float" .

    $default  reduce using rule 16 (standard_type)


state 9

   17 standard_type: "string" .

    $default  reduce using rule 17 (standard_type)


state 10

   71 class_declaration: "class" . "id" class_body ";"

    "id"  shift, and go to state 37


state 11

   18 standard_type: "void" .

    $default  reduce using rule 18 (standard_type)


state 12

  105 union_declaration: "union" . "id" union_body ";"

    "id"  shift, and go to state 38


state 13

   25 enum_declaration: "enum" . "id" enum_body ";"

    "id"  shift, and go to state 39


state 14

   13 typename: "id" .

    $default  reduce using rule 13 (typename)


state 15

    3 global_declarations: global_declarations global_declaration .

    $default  reduce using rule 3 (global_declarations)


state 16

    5 global_declaration: typedef_declaration .

    $default  reduce using rule 5 (global_declaration)


state 17

   99 func_header_start: typename . listspec "id"
  106 global_var_declaration: typename . init_variabledefs ";"
  121 class_func_header_start: typename . listspec func_class "id"

    "list"  shift, and go to state 40

    $default  reduce using rule 20 (listspec)

    listspec           go to state 41
    variabledef        go to state 42
    init_variabledefs  go to state 43
    init_variabledef   go to state 44


state 18

   12 typename: standard_type .

    $default  reduce using rule 12 (typename)


state 19

    6 global_declaration: enum_declaration .

    $default  reduce using rule 6 (global_declaration)


state 20

    7 global_declaration: class_declaration .

    $default  reduce using rule 7 (global_declaration)


state 21

  110 func_declaration: short_func_declaration .

    $default  reduce using rule 110 (func_declaration)


state 22

   96 short_func_declaration: short_par_func_header . ";"

    ";"  shift, and go to state 45


state 23

   98 short_par_func_header: func_header_start . "(" parameter_types ")"
  104 nopar_func_header: func_header_start . "(" ")"
  120 full_par_func_header: func_header_start . "(" parameter_list ")"

    "("  shift, and go to state 46


state 24

   97 short_func_declaration: nopar_func_header . ";"
  118 full_func_declaration: nopar_func_header . "{" $@3 decl_statements "}"

    ";"  shift, and go to state 47
    "{"  shift, and go to state 48


state 25

    8 global_declaration: union_declaration .

    $default  reduce using rule 8 (global_declaration)


state 26

    9 global_declaration: global_var_declaration .

    $default  reduce using rule 9 (global_declaration)


state 27

   10 global_declaration: func_declaration .

    $default  reduce using rule 10 (global_declaration)


state 28

  111 func_declaration: full_func_declaration .

    $default  reduce using rule 111 (func_declaration)


state 29

  114 full_func_declaration: full_par_func_header . "{" $@1 decl_statements "}"

    "{"  shift, and go to state 49


state 30

  119 full_par_func_header: class_func_header_start . "(" parameter_list ")"
  127 nopar_class_func_header: class_func_header_start . "(" ")"

    "("  shift, and go to state 50


state 31

  116 full_func_declaration: nopar_class_func_header . "{" $@2 decl_statements "}"

    "{"  shift, and go to state 51


state 32

    1 program: global_declarations main_function . "EOF"

    "EOF"  shift, and go to state 52


state 33

  187 main_function: main_header . "{" $@9 decl_statements "}"

    "{"  shift, and go to state 53


state 34

   15 standard_type: "int" .

    $default  reduce using rule 15 (standard_type)


state 35

   11 typedef_declaration: "typedef" typename . listspec "id" dims ";"

    "list"  shift, and go to state 40

    $default  reduce using rule 20 (listspec)

    listspec  go to state 54


state 36

  188 main_header: "int" "main" . "(" ")"

    "("  shift, and go to state 55


state 37

   71 class_declaration: "class" "id" . class_body ";"

    ":"  shift, and go to state 56

    $default  reduce using rule 74 (parent)

    class_body  go to state 57
    parent      go to state 58


state 38

  105 union_declaration: "union" "id" . union_body ";"

    "{"  shift, and go to state 59

    union_body  go to state 60


state 39

   25 enum_declaration: "enum" "id" . enum_body ";"

    "{"  shift, and go to state 61

    enum_body  go to state 62


state 40

   19 listspec: "list" .

    $default  reduce using rule 19 (listspec)


state 41

   89 variabledef: listspec . "id" dims
   99 func_header_start: typename listspec . "id"
  121 class_func_header_start: typename listspec . func_class "id"

    "id"  shift, and go to state 63

    func_class  go to state 64


state 42

  109 init_variabledef: variabledef . initializer

    "="  shift, and go to state 65

    $default  reduce using rule 30 (initializer)

    initializer  go to state 66


state 43

  106 global_var_declaration: typename init_variabledefs . ";"
  107 init_variabledefs: init_variabledefs . "," init_variabledef

    ";"  shift, and go to state 67
    ","  shift, and go to state 68


state 44

  108 init_variabledefs: init_variabledef .

    $default  reduce using rule 108 (init_variabledefs)


state 45

   96 short_func_declaration: short_par_func_header ";" .

    $default  reduce using rule 96 (short_func_declaration)


state 46

   98 short_par_func_header: func_header_start "(" . parameter_types ")"
  104 nopar_func_header: func_header_start "(" . ")"
  120 full_par_func_header: func_header_start "(" . parameter_list ")"

    "char"    shift, and go to state 6
    "int"     shift, and go to state 34
    "float"   shift, and go to state 8
    "string"  shift, and go to state 9
    "void"    shift, and go to state 11
    "id"      shift, and go to state 14
    ")"       shift, and go to state 69

    typename         go to state 70
    standard_type    go to state 18
    parameter_types  go to state 71
    parameter_list   go to state 72


state 47

   97 short_func_declaration: nopar_func_header ";" .

    $default  reduce using rule 97 (short_func_declaration)


state 48

  118 full_func_declaration: nopar_func_header "{" . $@3 decl_statements "}"

    $default  reduce using rule 117 ($@3)

    $@3  go to state 73


state 49

  114 full_func_declaration: full_par_func_header "{" . $@1 decl_statements "}"

    $default  reduce using rule 113 ($@1)

    $@1  go to state 74


state 50

  119 full_par_func_header: class_func_header_start "(" . parameter_list ")"
  127 nopar_class_func_header: class_func_header_start "(" . ")"

    "char"    shift, and go to state 6
    "int"     shift, and go to state 34
    "float"   shift, and go to state 8
    "string"  shift, and go to state 9
    "void"    shift, and go to state 11
    "id"      shift, and go to state 14
    ")"       shift, and go to state 75

    typename        go to state 76
    standard_type   go to state 18
    parameter_list  go to state 77


state 51

  116 full_func_declaration: nopar_class_func_header "{" . $@2 decl_statements "}"

    $default  reduce using rule 115 ($@2)

    $@2  go to state 78


state 52

    1 program: global_declarations main_function "EOF" .

    $default  reduce using rule 1 (program)


state 53

  187 main_function: main_header "{" . $@9 decl_statements "}"

    $default  reduce using rule 186 ($@9)

    $@9  go to state 79


state 54

   11 typedef_declaration: "typedef" typename listspec . "id" dims ";"

    "id"  shift, and go to state 80


state 55

  188 main_header: "int" "main" "(" . ")"

    ")"  shift, and go to state 81


state 56

   73 parent: ":" . "id"

    "id"  shift, and go to state 82


state 57

   71 class_declaration: "class" "id" class_body . ";"

    ";"  shift, and go to state 83


state 58

   72 class_body: parent . "{" members_methods "}"

    "{"  shift, and go to state 84


state 59

   91 union_body: "{" . fields "}"

    "char"    shift, and go to state 6
    "int"     shift, and go to state 34
    "float"   shift, and go to state 8
    "string"  shift, and go to state 9
    "void"    shift, and go to state 11
    "id"      shift, and go to state 14

    typename         go to state 85
    standard_type    go to state 18
    var_declaration  go to state 86
    fields           go to state 87
    field            go to state 88


state 60

  105 union_declaration: "union" "id" union_body . ";"

    ";"  shift, and go to state 89


state 61

   26 enum_body: "{" . id_list "}"

    "id"  shift, and go to state 90

    id_list  go to state 91


state 62

   25 enum_declaration: "enum" "id" enum_body . ";"

    ";"  shift, and go to state 92


state 63

   89 variabledef: listspec "id" . dims
   99 func_header_start: typename listspec "id" .
  122 func_class: "id" . "meth"

    "meth"  shift, and go to state 93

    "("       reduce using rule 99 (func_header_start)
    $default  reduce using rule 22 (dims)

    dims  go to state 94


state 64

  121 class_func_header_start: typename listspec func_class . "id"

    "id"  shift, and go to state 95


state 65

   29 initializer: "=" . init_value

    "static"    shift, and go to state 96
    "length"    shift, and go to state 97
    "new"       shift, and go to state 98
    "this"      shift, and go to state 99
    "iconst"    shift, and go to state 100
    "fconst"    shift, and go to state 101
    "cconst"    shift, and go to state 102
    "sconst"    shift, and go to state 103
    "+"         shift, and go to state 104
    "!"         shift, and go to state 105
    "++"        shift, and go to state 106
    "sizeop"    shift, and go to state 107
    "listfunc"  shift, and go to state 108
    "("         shift, and go to state 109
    "["         shift, and go to state 110
    "{"         shift, and go to state 111

    $default  reduce using rule 134 (decltype)

    init_value      go to state 112
    expression      go to state 113
    variable        go to state 114
    constant        go to state 115
    listexpression  go to state 116
    decltype        go to state 117


state 66

  109 init_variabledef: variabledef initializer .

    $default  reduce using rule 109 (init_variabledef)


state 67

  106 global_var_declaration: typename init_variabledefs ";" .

    $default  reduce using rule 106 (global_var_declaration)


state 68

  107 init_variabledefs: init_variabledefs "," . init_variabledef

    "list"  shift, and go to state 40

    $default  reduce using rule 20 (listspec)

    listspec          go to state 118
    variabledef       go to state 42
    init_variabledef  go to state 119


state 69

  104 nopar_func_header: func_header_start "(" ")" .

    $default  reduce using rule 104 (nopar_func_header)


state 70

  101 parameter_types: typename . pass_list_dims
  124 parameter_list: typename . pass_variabledef

    "list"   shift, and go to state 40
    "refer"  shift, and go to state 120

    $default  reduce using rule 20 (listspec)

    listspec          go to state 121
    variabledef       go to state 122
    pass_list_dims    go to state 123
    pass_variabledef  go to state 124


state 71

   98 short_par_func_header: func_header_start "(" parameter_types . ")"
  100 parameter_types: parameter_types . "," typename pass_list_dims

    ")"  shift, and go to state 125
    ","  shift, and go to state 126


state 72

  120 full_par_func_header: func_header_start "(" parameter_list . ")"
  123 parameter_list: parameter_list . "," typename pass_variabledef

    ")"  shift, and go to state 127
    ","  shift, and go to state 128


state 73

  118 full_func_declaration: nopar_func_header "{" $@3 . decl_statements "}"

    "static"  shift, and go to state 96

    "}"       reduce using rule 130 (decl_statements)
    $default  reduce using rule 134 (decltype)

    decl_statements  go to state 129
    declarations     go to state 130
    decltype         go to state 131


state 74

  114 full_func_declaration: full_par_func_header "{" $@1 . decl_statements "}"

    "static"  shift, and go to state 96

    "}"       reduce using rule 130 (decl_statements)
    $default  reduce using rule 134 (decltype)

    decl_statements  go to state 132
    declarations     go to state 130
    decltype         go to state 131


state 75

  127 nopar_class_func_header: class_func_header_start "(" ")" .

    $default  reduce using rule 127 (nopar_class_func_header)


state 76

  124 parameter_list: typename . pass_variabledef

    "list"   shift, and go to state 40
    "refer"  shift, and go to state 133

    $default  reduce using rule 20 (listspec)

    listspec          go to state 118
    variabledef       go to state 122
    pass_variabledef  go to state 124


state 77

  119 full_par_func_header: class_func_header_start "(" parameter_list . ")"
  123 parameter_list: parameter_list . "," typename pass_variabledef

    ")"  shift, and go to state 134
    ","  shift, and go to state 128


state 78

  116 full_func_declaration: nopar_class_func_header "{" $@2 . decl_statements "}"

    "static"  shift, and go to state 96

    "}"       reduce using rule 130 (decl_statements)
    $default  reduce using rule 134 (decltype)

    decl_statements  go to state 135
    declarations     go to state 130
    decltype         go to state 131


state 79

  187 main_function: main_header "{" $@9 . decl_statements "}"

    "static"  shift, and go to state 96

    "}"       reduce using rule 130 (decl_statements)
    $default  reduce using rule 134 (decltype)

    decl_statements  go to state 136
    declarations     go to state 130
    decltype         go to state 131


state 80

   11 typedef_declaration: "typedef" typename listspec "id" . dims ";"

    $default  reduce using rule 22 (dims)

    dims  go to state 137


state 81

  188 main_header: "int" "main" "(" ")" .

    $default  reduce using rule 188 (main_header)


state 82

   73 parent: ":" "id" .

    $default  reduce using rule 73 (parent)


state 83

   71 class_declaration: "class" "id" class_body ";" .

    $default  reduce using rule 71 (class_declaration)


state 84

   72 class_body: parent "{" . members_methods "}"

    "private"    shift, and go to state 138
    "protected"  shift, and go to state 139
    "public"     shift, and go to state 140

    $default  reduce using rule 80 (access)

    members_methods  go to state 141
    access           go to state 142


state 85

   85 var_declaration: typename . variabledefs ";"
   86                | typename . variabledefs error

    "list"  shift, and go to state 40

    $default  reduce using rule 20 (listspec)

    listspec      go to state 118
    variabledefs  go to state 143
    variabledef   go to state 144


state 86

   94 field: var_declaration .

    $default  reduce using rule 94 (field)


state 87

   91 union_body: "{" fields . "}"
   92 fields: fields . field

    "char"    shift, and go to state 6
    "int"     shift, and go to state 34
    "float"   shift, and go to state 8
    "string"  shift, and go to state 9
    "void"    shift, and go to state 11
    "id"      shift, and go to state 14
    "}"       shift, and go to state 145

    typename         go to state 85
    standard_type    go to state 18
    var_declaration  go to state 86
    field            go to state 146


state 88

   93 fields: field .

    $default  reduce using rule 93 (fields)


state 89

  105 union_declaration: "union" "id" union_body ";" .

    $default  reduce using rule 105 (union_declaration)


state 90

   28 id_list: "id" . initializer

    "="  shift, and go to state 65

    $default  reduce using rule 30 (initializer)

    initializer  go to state 147


state 91

   26 enum_body: "{" id_list . "}"
   27 id_list: id_list . "," "id" initializer

    ","  shift, and go to state 148
    "}"  shift, and go to state 149


state 92

   25 enum_declaration: "enum" "id" enum_body ";" .

    $default  reduce using rule 25 (enum_declaration)


state 93

  122 func_class: "id" "meth" .

    $default  reduce using rule 122 (func_class)


state 94

   21 dims: dims . dim
   89 variabledef: listspec "id" dims .

    "["  shift, and go to state 150

    $default  reduce using rule 89 (variabledef)

    dim  go to state 151


state 95

  121 class_func_header_start: typename listspec func_class "id" .

    $default  reduce using rule 121 (class_func_header_start)


state 96

  133 decltype: "static" .

    $default  reduce using rule 133 (decltype)


state 97

   46 expression: "length" . "(" general_expression ")"

    "("  shift, and go to state 152


state 98

   47 expression: "new" . "(" general_expression ")"

    "("  shift, and go to state 153


state 99

   56 variable: "this" .

    $default  reduce using rule 56 (variable)


state 100

   65 constant: "iconst" .

    $default  reduce using rule 65 (constant)


state 101

   66 constant: "fconst" .

    $default  reduce using rule 66 (constant)


state 102

   64 constant: "cconst" .

    $default  reduce using rule 64 (constant)


state 103

   67 constant: "sconst" .

    $default  reduce using rule 67 (constant)


state 104

   40 expression: "+" . expression

    "static"    shift, and go to state 96
    "length"    shift, and go to state 97
    "new"       shift, and go to state 98
    "this"      shift, and go to state 99
    "iconst"    shift, and go to state 100
    "fconst"    shift, and go to state 101
    "cconst"    shift, and go to state 102
    "sconst"    shift, and go to state 103
    "+"         shift, and go to state 104
    "!"         shift, and go to state 105
    "++"        shift, and go to state 106
    "sizeop"    shift, and go to state 107
    "listfunc"  shift, and go to state 108
    "("         shift, and go to state 109
    "["         shift, and go to state 110

    $default  reduce using rule 134 (decltype)

    expression      go to state 154
    variable        go to state 114
    constant        go to state 115
    listexpression  go to state 116
    decltype        go to state 117


state 105

   39 expression: "!" . expression

    "static"    shift, and go to state 96
    "length"    shift, and go to state 97
    "new"       shift, and go to state 98
    "this"      shift, and go to state 99
    "iconst"    shift, and go to state 100
    "fconst"    shift, and go to state 101
    "cconst"    shift, and go to state 102
    "sconst"    shift, and go to state 103
    "+"         shift, and go to state 104
    "!"         shift, and go to state 105
    "++"        shift, and go to state 106
    "sizeop"    shift, and go to state 107
    "listfunc"  shift, and go to state 108
    "("         shift, and go to state 109
    "["         shift, and go to state 110

    $default  reduce using rule 134 (decltype)

    expression      go to state 155
    variable        go to state 114
    constant        go to state 115
    listexpression  go to state 116
    decltype        go to state 117


state 106

   42 expression: "++" . variable

    "static"    shift, and go to state 96
    "this"      shift, and go to state 99
    "listfunc"  shift, and go to state 108

    $default  reduce using rule 134 (decltype)

    variable  go to state 156
    decltype  go to state 117


state 107

   41 expression: "sizeop" . expression

    "static"    shift, and go to state 96
    "length"    shift, and go to state 97
    "new"       shift, and go to state 98
    "this"      shift, and go to state 99
    "iconst"    shift, and go to state 100
    "fconst"    shift, and go to state 101
    "cconst"    shift, and go to state 102
    "sconst"    shift, and go to state 103
    "+"         shift, and go to state 104
    "!"         shift, and go to state 105
    "++"        shift, and go to state 106
    "sizeop"    shift, and go to state 107
    "listfunc"  shift, and go to state 108
    "("         shift, and go to state 109
    "["         shift, and go to state 110

    $default  reduce using rule 134 (decltype)

    expression      go to state 157
    variable        go to state 114
    constant        go to state 115
    listexpression  go to state 116
    decltype        go to state 117


state 108

   54 variable: "listfunc" . "(" general_expression ")"

    "("  shift, and go to state 158


state 109

   49 expression: "(" . general_expression ")"
   50           | "(" . standard_type ")"

    error       shift, and go to state 159
    "char"      shift, and go to state 6
    "int"       shift, and go to state 34
    "float"     shift, and go to state 8
    "string"    shift, and go to state 9
    "void"      shift, and go to state 11
    "static"    shift, and go to state 96
    "length"    shift, and go to state 97
    "new"       shift, and go to state 98
    "this"      shift, and go to state 99
    "iconst"    shift, and go to state 100
    "fconst"    shift, and go to state 101
    "cconst"    shift, and go to state 102
    "sconst"    shift, and go to state 103
    "+"         shift, and go to state 104
    "!"         shift, and go to state 105
    "++"        shift, and go to state 106
    "sizeop"    shift, and go to state 107
    "listfunc"  shift, and go to state 108
    "("         shift, and go to state 109
    "["         shift, and go to state 110

    "id"  reduce using rule 134 (decltype)

    standard_type       go to state 160
    expression          go to state 161
    variable            go to state 162
    general_expression  go to state 163
    assignment          go to state 164
    constant            go to state 115
    listexpression      go to state 116
    decltype            go to state 117


state 110

   68 listexpression: "[" . expression_list "]"

    error       shift, and go to state 159
    "static"    shift, and go to state 96
    "length"    shift, and go to state 97
    "new"       shift, and go to state 98
    "this"      shift, and go to state 99
    "iconst"    shift, and go to state 100
    "fconst"    shift, and go to state 101
    "cconst"    shift, and go to state 102
    "sconst"    shift, and go to state 103
    "+"         shift, and go to state 104
    "!"         shift, and go to state 105
    "++"        shift, and go to state 106
    "sizeop"    shift, and go to state 107
    "listfunc"  shift, and go to state 108
    "("         shift, and go to state 109
    "["         shift, and go to state 110

    "id"  reduce using rule 134 (decltype)
    "]"   reduce using rule 63 (expression_list)

    expression          go to state 161
    variable            go to state 162
    general_expression  go to state 165
    assignment          go to state 164
    expression_list     go to state 166
    constant            go to state 115
    listexpression      go to state 116
    decltype            go to state 117


state 111

   32 init_value: "{" . init_values "}"

    "static"    shift, and go to state 96
    "length"    shift, and go to state 97
    "new"       shift, and go to state 98
    "this"      shift, and go to state 99
    "iconst"    shift, and go to state 100
    "fconst"    shift, and go to state 101
    "cconst"    shift, and go to state 102
    "sconst"    shift, and go to state 103
    "+"         shift, and go to state 104
    "!"         shift, and go to state 105
    "++"        shift, and go to state 106
    "sizeop"    shift, and go to state 107
    "listfunc"  shift, and go to state 108
    "("         shift, and go to state 109
    "["         shift, and go to state 110
    "{"         shift, and go to state 111

    $default  reduce using rule 134 (decltype)

    init_value      go to state 167
    expression      go to state 113
    variable        go to state 114
    constant        go to state 115
    listexpression  go to state 116
    init_values     go to state 168
    decltype        go to state 117


state 112

   29 initializer: "=" init_value .

    $default  reduce using rule 29 (initializer)


state 113

   31 init_value: expression .
   33 expression: expression . "||" expression
   34           | expression . "&&" expression
   35           | expression . "==" expression
   36           | expression . ">" expression
   37           | expression . "+" expression
   38           | expression . "*" expression

    "||"  shift, and go to state 169
    "&&"  shift, and go to state 170
    "=="  shift, and go to state 171
    ">"   shift, and go to state 172
    "+"   shift, and go to state 173
    "*"   shift, and go to state 174

    $default  reduce using rule 31 (init_value)


state 114

   43 expression: variable . "++"
   44           | variable .
   45           | variable . "(" expression_list ")"
   52 variable: variable . "[" general_expression "]"
   53         | variable . "." "id"

    "++"  shift, and go to state 175
    "("   shift, and go to state 176
    "."   shift, and go to state 177
    "["   shift, and go to state 178

    $default  reduce using rule 44 (expression)


state 115

   48 expression: constant .

    $default  reduce using rule 48 (expression)


state 116

   51 expression: listexpression .

    $default  reduce using rule 51 (expression)


state 117

   55 variable: decltype . "id"

    "id"  shift, and go to state 179


state 118

   89 variabledef: listspec . "id" dims

    "id"  shift, and go to state 180


state 119

  107 init_variabledefs: init_variabledefs "," init_variabledef .

    $default  reduce using rule 107 (init_variabledefs)


state 120

  102 pass_list_dims: "refer" .
  126 pass_variabledef: "refer" . "id"

    "id"  shift, and go to state 181

    $default  reduce using rule 102 (pass_list_dims)


state 121

   89 variabledef: listspec . "id" dims
  103 pass_list_dims: listspec . dims

    "id"  shift, and go to state 180

    $default  reduce using rule 22 (dims)

    dims  go to state 182


state 122

  125 pass_variabledef: variabledef .

    $default  reduce using rule 125 (pass_variabledef)


state 123

  101 parameter_types: typename pass_list_dims .

    $default  reduce using rule 101 (parameter_types)


state 124

  124 parameter_list: typename pass_variabledef .

    $default  reduce using rule 124 (parameter_list)


state 125

   98 short_par_func_header: func_header_start "(" parameter_types ")" .

    $default  reduce using rule 98 (short_par_func_header)


state 126

  100 parameter_types: parameter_types "," . typename pass_list_dims

    "char"    shift, and go to state 6
    "int"     shift, and go to state 34
    "float"   shift, and go to state 8
    "string"  shift, and go to state 9
    "void"    shift, and go to state 11
    "id"      shift, and go to state 14

    typename       go to state 183
    standard_type  go to state 18


state 127

  120 full_par_func_header: func_header_start "(" parameter_list ")" .

    $default  reduce using rule 120 (full_par_func_header)


state 128

  123 parameter_list: parameter_list "," . typename pass_variabledef

    "char"    shift, and go to state 6
    "int"     shift, and go to state 34
    "float"   shift, and go to state 8
    "string"  shift, and go to state 9
    "void"    shift, and go to state 11
    "id"      shift, and go to state 14

    typename       go to state 184
    standard_type  go to state 18


state 129

  118 full_func_declaration: nopar_func_header "{" $@3 decl_statements . "}"

    "}"  shift, and go to state 185


state 130

  128 decl_statements: declarations . statements
  129                | declarations .
  131 declarations: declarations . decltype typename variabledefs ";"

    error       shift, and go to state 186
    "static"    shift, and go to state 96
    "continue"  shift, and go to state 187
    "break"     shift, and go to state 188
    "if"        shift, and go to state 189
    "while"     shift, and go to state 190
    "for"       shift, and go to state 191
    "switch"    shift, and go to state 192
    "return"    shift, and go to state 193
    "length"    shift, and go to state 97
    "new"       shift, and go to state 98
    "cin"       shift, and go to state 194
    "cout"      shift, and go to state 195
    "this"      shift, and go to state 99
    "iconst"    shift, and go to state 100
    "fconst"    shift, and go to state 101
    "cconst"    shift, and go to state 102
    "sconst"    shift, and go to state 103
    "+"         shift, and go to state 104
    "!"         shift, and go to state 105
    "++"        shift, and go to state 106
    "sizeop"    shift, and go to state 107
    "listfunc"  shift, and go to state 108
    "("         shift, and go to state 109
    ";"         shift, and go to state 196
    "["         shift, and go to state 110
    "{"         shift, and go to state 197

    "char"    reduce using rule 134 (decltype)
    "int"     reduce using rule 134 (decltype)
    "float"   reduce using rule 134 (decltype)
    "string"  reduce using rule 134 (decltype)
    "void"    reduce using rule 134 (decltype)
    "id"      reduce using rule 134 (decltype)
    "}"       reduce using rule 129 (decl_statements)

    expression            go to state 161
    variable              go to state 162
    general_expression    go to state 198
    assignment            go to state 164
    constant              go to state 115
    listexpression        go to state 116
    decltype              go to state 199
    statements            go to state 200
    statement             go to state 201
    expression_statement  go to state 202
    if_statement          go to state 203
    while_statement       go to state 204
    for_statement         go to state 205
    switch_statement      go to state 206
    return_statement      go to state 207
    io_statement          go to state 208
    comp_statement        go to state 209


state 131

  132 declarations: decltype . typename variabledefs ";"

    "char"    shift, and go to state 6
    "int"     shift, and go to state 34
    "float"   shift, and go to state 8
    "string"  shift, and go to state 9
    "void"    shift, and go to state 11
    "id"      shift, and go to state 14

    typename       go to state 210
    standard_type  go to state 18


state 132

  114 full_func_declaration: full_par_func_header "{" $@1 decl_statements . "}"

    "}"  shift, and go to state 211


state 133

  126 pass_variabledef: "refer" . "id"

    "id"  shift, and go to state 181


state 134

  119 full_par_func_header: class_func_header_start "(" parameter_list ")" .

    $default  reduce using rule 119 (full_par_func_header)


state 135

  116 full_func_declaration: nopar_class_func_header "{" $@2 decl_statements . "}"

    "}"  shift, and go to state 212


state 136

  187 main_function: main_header "{" $@9 decl_statements . "}"

    "}"  shift, and go to state 213


state 137

   11 typedef_declaration: "typedef" typename listspec "id" dims . ";"
   21 dims: dims . dim

    ";"  shift, and go to state 214
    "["  shift, and go to state 150

    dim  go to state 151


state 138

   77 access: "private" . ":"

    ":"  shift, and go to state 215


state 139

   78 access: "protected" . ":"

    ":"  shift, and go to state 216


state 140

   79 access: "public" . ":"

    ":"  shift, and go to state 217


state 141

   72 class_body: parent "{" members_methods . "}"
   75 members_methods: members_methods . access member_or_method

    "private"    shift, and go to state 138
    "protected"  shift, and go to state 139
    "public"     shift, and go to state 140
    "}"          shift, and go to state 218

    $default  reduce using rule 80 (access)

    access  go to state 219


state 142

   76 members_methods: access . member_or_method

    "char"    shift, and go to state 6
    "int"     shift, and go to state 34
    "float"   shift, and go to state 8
    "string"  shift, and go to state 9
    "void"    shift, and go to state 11
    "union"   shift, and go to state 220
    "id"      shift, and go to state 14

    typename                go to state 221
    standard_type           go to state 18
    member_or_method        go to state 222
    member                  go to state 223
    var_declaration         go to state 224
    anonymous_union         go to state 225
    method                  go to state 226
    short_func_declaration  go to state 227
    short_par_func_header   go to state 22
    func_header_start       go to state 228
    nopar_func_header       go to state 229


state 143

   85 var_declaration: typename variabledefs . ";"
   86                | typename variabledefs . error
   87 variabledefs: variabledefs . "," variabledef

    error  shift, and go to state 230
    ";"    shift, and go to state 231
    ","    shift, and go to state 232


state 144

   88 variabledefs: variabledef .

    $default  reduce using rule 88 (variabledefs)


state 145

   91 union_body: "{" fields "}" .

    $default  reduce using rule 91 (union_body)


state 146

   92 fields: fields field .

    $default  reduce using rule 92 (fields)


state 147

   28 id_list: "id" initializer .

    $default  reduce using rule 28 (id_list)


state 148

   27 id_list: id_list "," . "id" initializer

    "id"  shift, and go to state 233


state 149

   26 enum_body: "{" id_list "}" .

    $default  reduce using rule 26 (enum_body)


state 150

   23 dim: "[" . "iconst" "]"
   24    | "[" . "]"

    "iconst"  shift, and go to state 234
    "]"       shift, and go to state 235


state 151

   21 dims: dims dim .

    $default  reduce using rule 21 (dims)


state 152

   46 expression: "length" "(" . general_expression ")"

    error       shift, and go to state 159
    "static"    shift, and go to state 96
    "length"    shift, and go to state 97
    "new"       shift, and go to state 98
    "this"      shift, and go to state 99
    "iconst"    shift, and go to state 100
    "fconst"    shift, and go to state 101
    "cconst"    shift, and go to state 102
    "sconst"    shift, and go to state 103
    "+"         shift, and go to state 104
    "!"         shift, and go to state 105
    "++"        shift, and go to state 106
    "sizeop"    shift, and go to state 107
    "listfunc"  shift, and go to state 108
    "("         shift, and go to state 109
    "["         shift, and go to state 110

    "id"  reduce using rule 134 (decltype)

    expression          go to state 161
    variable            go to state 162
    general_expression  go to state 236
    assignment          go to state 164
    constant            go to state 115
    listexpression      go to state 116
    decltype            go to state 117


state 153

   47 expression: "new" "(" . general_expression ")"

    error       shift, and go to state 159
    "static"    shift, and go to state 96
    "length"    shift, and go to state 97
    "new"       shift, and go to state 98
    "this"      shift, and go to state 99
    "iconst"    shift, and go to state 100
    "fconst"    shift, and go to state 101
    "cconst"    shift, and go to state 102
    "sconst"    shift, and go to state 103
    "+"         shift, and go to state 104
    "!"         shift, and go to state 105
    "++"        shift, and go to state 106
    "sizeop"    shift, and go to state 107
    "listfunc"  shift, and go to state 108
    "("         shift, and go to state 109
    "["         shift, and go to state 110

    "id"  reduce using rule 134 (decltype)

    expression          go to state 161
    variable            go to state 162
    general_expression  go to state 237
    assignment          go to state 164
    constant            go to state 115
    listexpression      go to state 116
    decltype            go to state 117


state 154

   33 expression: expression . "||" expression
   34           | expression . "&&" expression
   35           | expression . "==" expression
   36           | expression . ">" expression
   37           | expression . "+" expression
   38           | expression . "*" expression
   40           | "+" expression .

    "*"  shift, and go to state 174

    $default  reduce using rule 40 (expression)


state 155

   33 expression: expression . "||" expression
   34           | expression . "&&" expression
   35           | expression . "==" expression
   36           | expression . ">" expression
   37           | expression . "+" expression
   38           | expression . "*" expression
   39           | "!" expression .

    $default  reduce using rule 39 (expression)


state 156

   42 expression: "++" variable .
   52 variable: variable . "[" general_expression "]"
   53         | variable . "." "id"

    "."  shift, and go to state 177
    "["  shift, and go to state 178

    $default  reduce using rule 42 (expression)


state 157

   33 expression: expression . "||" expression
   34           | expression . "&&" expression
   35           | expression . "==" expression
   36           | expression . ">" expression
   37           | expression . "+" expression
   38           | expression . "*" expression
   41           | "sizeop" expression .

    $default  reduce using rule 41 (expression)


state 158

   54 variable: "listfunc" "(" . general_expression ")"

    error       shift, and go to state 159
    "static"    shift, and go to state 96
    "length"    shift, and go to state 97
    "new"       shift, and go to state 98
    "this"      shift, and go to state 99
    "iconst"    shift, and go to state 100
    "fconst"    shift, and go to state 101
    "cconst"    shift, and go to state 102
    "sconst"    shift, and go to state 103
    "+"         shift, and go to state 104
    "!"         shift, and go to state 105
    "++"        shift, and go to state 106
    "sizeop"    shift, and go to state 107
    "listfunc"  shift, and go to state 108
    "("         shift, and go to state 109
    "["         shift, and go to state 110

    "id"  reduce using rule 134 (decltype)

    expression          go to state 161
    variable            go to state 162
    general_expression  go to state 238
    assignment          go to state 164
    constant            go to state 115
    listexpression      go to state 116
    decltype            go to state 117


state 159

   61 assignment: error .

    $default  reduce using rule 61 (assignment)


state 160

   50 expression: "(" standard_type . ")"

    ")"  shift, and go to state 239


state 161

   33 expression: expression . "||" expression
   34           | expression . "&&" expression
   35           | expression . "==" expression
   36           | expression . ">" expression
   37           | expression . "+" expression
   38           | expression . "*" expression
   60 assignment: expression .

    "||"  shift, and go to state 169
    "&&"  shift, and go to state 170
    "=="  shift, and go to state 171
    ">"   shift, and go to state 172
    "+"   shift, and go to state 173
    "*"   shift, and go to state 174

    $default  reduce using rule 60 (assignment)


state 162

   43 expression: variable . "++"
   44           | variable .
   45           | variable . "(" expression_list ")"
   52 variable: variable . "[" general_expression "]"
   53         | variable . "." "id"
   59 assignment: variable . "=" assignment

    "++"  shift, and go to state 175
    "("   shift, and go to state 176
    "."   shift, and go to state 177
    "="   shift, and go to state 240
    "["   shift, and go to state 178

    $default  reduce using rule 44 (expression)


state 163

   49 expression: "(" general_expression . ")"
   57 general_expression: general_expression . "," general_expression

    ")"  shift, and go to state 241
    ","  shift, and go to state 242


state 164

   58 general_expression: assignment .

    $default  reduce using rule 58 (general_expression)


state 165

   57 general_expression: general_expression . "," general_expression
   62 expression_list: general_expression .

    ","  shift, and go to state 242

    $default  reduce using rule 62 (expression_list)


state 166

   68 listexpression: "[" expression_list . "]"

    "]"  shift, and go to state 243


state 167

   70 init_values: init_value .

    $default  reduce using rule 70 (init_values)


state 168

   32 init_value: "{" init_values . "}"
   69 init_values: init_values . "," init_value

    ","  shift, and go to state 244
    "}"  shift, and go to state 245


state 169

   33 expression: expression "||" . expression

    "static"    shift, and go to state 96
    "length"    shift, and go to state 97
    "new"       shift, and go to state 98
    "this"      shift, and go to state 99
    "iconst"    shift, and go to state 100
    "fconst"    shift, and go to state 101
    "cconst"    shift, and go to state 102
    "sconst"    shift, and go to state 103
    "+"         shift, and go to state 104
    "!"         shift, and go to state 105
    "++"        shift, and go to state 106
    "sizeop"    shift, and go to state 107
    "listfunc"  shift, and go to state 108
    "("         shift, and go to state 109
    "["         shift, and go to state 110

    $default  reduce using rule 134 (decltype)

    expression      go to state 246
    variable        go to state 114
    constant        go to state 115
    listexpression  go to state 116
    decltype        go to state 117


state 170

   34 expression: expression "&&" . expression

    "static"    shift, and go to state 96
    "length"    shift, and go to state 97
    "new"       shift, and go to state 98
    "this"      shift, and go to state 99
    "iconst"    shift, and go to state 100
    "fconst"    shift, and go to state 101
    "cconst"    shift, and go to state 102
    "sconst"    shift, and go to state 103
    "+"         shift, and go to state 104
    "!"         shift, and go to state 105
    "++"        shift, and go to state 106
    "sizeop"    shift, and go to state 107
    "listfunc"  shift, and go to state 108
    "("         shift, and go to state 109
    "["         shift, and go to state 110

    $default  reduce using rule 134 (decltype)

    expression      go to state 247
    variable        go to state 114
    constant        go to state 115
    listexpression  go to state 116
    decltype        go to state 117


state 171

   35 expression: expression "==" . expression

    "static"    shift, and go to state 96
    "length"    shift, and go to state 97
    "new"       shift, and go to state 98
    "this"      shift, and go to state 99
    "iconst"    shift, and go to state 100
    "fconst"    shift, and go to state 101
    "cconst"    shift, and go to state 102
    "sconst"    shift, and go to state 103
    "+"         shift, and go to state 104
    "!"         shift, and go to state 105
    "++"        shift, and go to state 106
    "sizeop"    shift, and go to state 107
    "listfunc"  shift, and go to state 108
    "("         shift, and go to state 109
    "["         shift, and go to state 110

    $default  reduce using rule 134 (decltype)

    expression      go to state 248
    variable        go to state 114
    constant        go to state 115
    listexpression  go to state 116
    decltype        go to state 117


state 172

   36 expression: expression ">" . expression

    "static"    shift, and go to state 96
    "length"    shift, and go to state 97
    "new"       shift, and go to state 98
    "this"      shift, and go to state 99
    "iconst"    shift, and go to state 100
    "fconst"    shift, and go to state 101
    "cconst"    shift, and go to state 102
    "sconst"    shift, and go to state 103
    "+"         shift, and go to state 104
    "!"         shift, and go to state 105
    "++"        shift, and go to state 106
    "sizeop"    shift, and go to state 107
    "listfunc"  shift, and go to state 108
    "("         shift, and go to state 109
    "["         shift, and go to state 110

    $default  reduce using rule 134 (decltype)

    expression      go to state 249
    variable        go to state 114
    constant        go to state 115
    listexpression  go to state 116
    decltype        go to state 117


state 173

   37 expression: expression "+" . expression

    "static"    shift, and go to state 96
    "length"    shift, and go to state 97
    "new"       shift, and go to state 98
    "this"      shift, and go to state 99
    "iconst"    shift, and go to state 100
    "fconst"    shift, and go to state 101
    "cconst"    shift, and go to state 102
    "sconst"    shift, and go to state 103
    "+"         shift, and go to state 104
    "!"         shift, and go to state 105
    "++"        shift, and go to state 106
    "sizeop"    shift, and go to state 107
    "listfunc"  shift, and go to state 108
    "("         shift, and go to state 109
    "["         shift, and go to state 110

    $default  reduce using rule 134 (decltype)

    expression      go to state 250
    variable        go to state 114
    constant        go to state 115
    listexpression  go to state 116
    decltype        go to state 117


state 174

   38 expression: expression "*" . expression

    "static"    shift, and go to state 96
    "length"    shift, and go to state 97
    "new"       shift, and go to state 98
    "this"      shift, and go to state 99
    "iconst"    shift, and go to state 100
    "fconst"    shift, and go to state 101
    "cconst"    shift, and go to state 102
    "sconst"    shift, and go to state 103
    "+"         shift, and go to state 104
    "!"         shift, and go to state 105
    "++"        shift, and go to state 106
    "sizeop"    shift, and go to state 107
    "listfunc"  shift, and go to state 108
    "("         shift, and go to state 109
    "["         shift, and go to state 110

    $default  reduce using rule 134 (decltype)

    expression      go to state 251
    variable        go to state 114
    constant        go to state 115
    listexpression  go to state 116
    decltype        go to state 117


state 175

   43 expression: variable "++" .

    $default  reduce using rule 43 (expression)


state 176

   45 expression: variable "(" . expression_list ")"

    error       shift, and go to state 159
    "static"    shift, and go to state 96
    "length"    shift, and go to state 97
    "new"       shift, and go to state 98
    "this"      shift, and go to state 99
    "iconst"    shift, and go to state 100
    "fconst"    shift, and go to state 101
    "cconst"    shift, and go to state 102
    "sconst"    shift, and go to state 103
    "+"         shift, and go to state 104
    "!"         shift, and go to state 105
    "++"        shift, and go to state 106
    "sizeop"    shift, and go to state 107
    "listfunc"  shift, and go to state 108
    "("         shift, and go to state 109
    "["         shift, and go to state 110

    "id"  reduce using rule 134 (decltype)
    ")"   reduce using rule 63 (expression_list)

    expression          go to state 161
    variable            go to state 162
    general_expression  go to state 165
    assignment          go to state 164
    expression_list     go to state 252
    constant            go to state 115
    listexpression      go to state 116
    decltype            go to state 117


state 177

   53 variable: variable "." . "id"

    "id"  shift, and go to state 253


state 178

   52 variable: variable "[" . general_expression "]"

    error       shift, and go to state 159
    "static"    shift, and go to state 96
    "length"    shift, and go to state 97
    "new"       shift, and go to state 98
    "this"      shift, and go to state 99
    "iconst"    shift, and go to state 100
    "fconst"    shift, and go to state 101
    "cconst"    shift, and go to state 102
    "sconst"    shift, and go to state 103
    "+"         shift, and go to state 104
    "!"         shift, and go to state 105
    "++"        shift, and go to state 106
    "sizeop"    shift, and go to state 107
    "listfunc"  shift, and go to state 108
    "("         shift, and go to state 109
    "["         shift, and go to state 110

    "id"  reduce using rule 134 (decltype)

    expression          go to state 161
    variable            go to state 162
    general_expression  go to state 254
    assignment          go to state 164
    constant            go to state 115
    listexpression      go to state 116
    decltype            go to state 117


state 179

   55 variable: decltype "id" .

    $default  reduce using rule 55 (variable)


state 180

   89 variabledef: listspec "id" . dims

    $default  reduce using rule 22 (dims)

    dims  go to state 94


state 181

  126 pass_variabledef: "refer" "id" .

    $default  reduce using rule 126 (pass_variabledef)


state 182

   21 dims: dims . dim
  103 pass_list_dims: listspec dims .

    "["  shift, and go to state 150

    $default  reduce using rule 103 (pass_list_dims)

    dim  go to state 151


state 183

  100 parameter_types: parameter_types "," typename . pass_list_dims

    "list"   shift, and go to state 40
    "refer"  shift, and go to state 255

    $default  reduce using rule 20 (listspec)

    listspec        go to state 256
    pass_list_dims  go to state 257


state 184

  123 parameter_list: parameter_list "," typename . pass_variabledef

    "list"   shift, and go to state 40
    "refer"  shift, and go to state 133

    $default  reduce using rule 20 (listspec)

    listspec          go to state 118
    variabledef       go to state 122
    pass_variabledef  go to state 258


state 185

  118 full_func_declaration: nopar_func_header "{" $@3 decl_statements "}" .

    $default  reduce using rule 118 (full_func_declaration)


state 186

   61 assignment: error .
  149 expression_statement: error . ";"

    ";"  shift, and go to state 259

    ";"       [reduce using rule 61 (assignment)]
    $default  reduce using rule 61 (assignment)


state 187

  145 statement: "continue" . ";"

    ";"  shift, and go to state 260


state 188

  146 statement: "break" . ";"

    ";"  shift, and go to state 261


state 189

  151 if_statement: "if" . "(" general_expression ")" $@4 statement if_tail

    "("  shift, and go to state 262


state 190

  155 while_statement: "while" . "(" general_expression ")" $@5 statement

    "("  shift, and go to state 263


state 191

  157 for_statement: "for" . "(" optexpr ";" optexpr ";" optexpr ")" $@6 statement

    "("  shift, and go to state 264


state 192

  161 switch_statement: "switch" . "(" general_expression ")" $@7 switch_tail

    "("  shift, and go to state 265


state 193

  175 return_statement: "return" . optexpr ";"

    error       shift, and go to state 159
    "static"    shift, and go to state 96
    "length"    shift, and go to state 97
    "new"       shift, and go to state 98
    "this"      shift, and go to state 99
    "iconst"    shift, and go to state 100
    "fconst"    shift, and go to state 101
    "cconst"    shift, and go to state 102
    "sconst"    shift, and go to state 103
    "+"         shift, and go to state 104
    "!"         shift, and go to state 105
    "++"        shift, and go to state 106
    "sizeop"    shift, and go to state 107
    "listfunc"  shift, and go to state 108
    "("         shift, and go to state 109
    "["         shift, and go to state 110

    "id"  reduce using rule 134 (decltype)
    ";"   reduce using rule 159 (optexpr)

    expression          go to state 161
    variable            go to state 162
    general_expression  go to state 266
    assignment          go to state 164
    constant            go to state 115
    listexpression      go to state 116
    decltype            go to state 117
    optexpr             go to state 267


state 194

  176 io_statement: "cin" . "<<" in_list ";"

    "<<"  shift, and go to state 268


state 195

  177 io_statement: "cout" . ">>" out_list ";"

    ">>"  shift, and go to state 269


state 196

  147 statement: ";" .

    $default  reduce using rule 147 (statement)


state 197

  185 comp_statement: "{" . $@8 decl_statements "}"

    $default  reduce using rule 184 ($@8)

    $@8  go to state 270


state 198

   57 general_expression: general_expression . "," general_expression
  148 expression_statement: general_expression . ";"

    ";"  shift, and go to state 271
    ","  shift, and go to state 242


state 199

   55 variable: decltype . "id"
  131 declarations: declarations decltype . typename variabledefs ";"

    "char"    shift, and go to state 6
    "int"     shift, and go to state 34
    "float"   shift, and go to state 8
    "string"  shift, and go to state 9
    "void"    shift, and go to state 11
    "id"      shift, and go to state 272

    typename       go to state 273
    standard_type  go to state 18


state 200

  128 decl_statements: declarations statements .
  135 statements: statements . statement

    error       shift, and go to state 186
    "static"    shift, and go to state 96
    "continue"  shift, and go to state 187
    "break"     shift, and go to state 188
    "if"        shift, and go to state 189
    "while"     shift, and go to state 190
    "for"       shift, and go to state 191
    "switch"    shift, and go to state 192
    "return"    shift, and go to state 193
    "length"    shift, and go to state 97
    "new"       shift, and go to state 98
    "cin"       shift, and go to state 194
    "cout"      shift, and go to state 195
    "this"      shift, and go to state 99
    "iconst"    shift, and go to state 100
    "fconst"    shift, and go to state 101
    "cconst"    shift, and go to state 102
    "sconst"    shift, and go to state 103
    "+"         shift, and go to state 104
    "!"         shift, and go to state 105
    "++"        shift, and go to state 106
    "sizeop"    shift, and go to state 107
    "listfunc"  shift, and go to state 108
    "("         shift, and go to state 109
    ";"         shift, and go to state 196
    "["         shift, and go to state 110
    "{"         shift, and go to state 197

    "id"  reduce using rule 134 (decltype)
    "}"   reduce using rule 128 (decl_statements)

    expression            go to state 161
    variable              go to state 162
    general_expression    go to state 198
    assignment            go to state 164
    constant              go to state 115
    listexpression        go to state 116
    decltype              go to state 117
    statement             go to state 274
    expression_statement  go to state 202
    if_statement          go to state 203
    while_statement       go to state 204
    for_statement         go to state 205
    switch_statement      go to state 206
    return_statement      go to state 207
    io_statement          go to state 208
    comp_statement        go to state 209


state 201

  136 statements: statement .

    $default  reduce using rule 136 (statements)


state 202

  137 statement: expression_statement .

    $default  reduce using rule 137 (statement)


state 203

  138 statement: if_statement .

    $default  reduce using rule 138 (statement)


state 204

  139 statement: while_statement .

    $default  reduce using rule 139 (statement)


state 205

  140 statement: for_statement .

    $default  reduce using rule 140 (statement)


state 206

  141 statement: switch_statement .

    $default  reduce using rule 141 (statement)


state 207

  142 statement: return_statement .

    $default  reduce using rule 142 (statement)


state 208

  143 statement: io_statement .

    $default  reduce using rule 143 (statement)


state 209

  144 statement: comp_statement .

    $default  reduce using rule 144 (statement)


state 210

  132 declarations: decltype typename . variabledefs ";"

    "list"  shift, and go to state 40

    $default  reduce using rule 20 (listspec)

    listspec      go to state 118
    variabledefs  go to state 275
    variabledef   go to state 144


state 211

  114 full_func_declaration: full_par_func_header "{" $@1 decl_statements "}" .

    $default  reduce using rule 114 (full_func_declaration)


state 212

  116 full_func_declaration: nopar_class_func_header "{" $@2 decl_statements "}" .

    $default  reduce using rule 116 (full_func_declaration)


state 213

  187 main_function: main_header "{" $@9 decl_statements "}" .

    $default  reduce using rule 187 (main_function)


state 214

   11 typedef_declaration: "typedef" typename listspec "id" dims ";" .

    $default  reduce using rule 11 (typedef_declaration)


state 215

   77 access: "private" ":" .

    $default  reduce using rule 77 (access)


state 216

   78 access: "protected" ":" .

    $default  reduce using rule 78 (access)


state 217

   79 access: "public" ":" .

    $default  reduce using rule 79 (access)


state 218

   72 class_body: parent "{" members_methods "}" .

    $default  reduce using rule 72 (class_body)


state 219

   75 members_methods: members_methods access . member_or_method

    "char"    shift, and go to state 6
    "int"     shift, and go to state 34
    "float"   shift, and go to state 8
    "string"  shift, and go to state 9
    "void"    shift, and go to state 11
    "union"   shift, and go to state 220
    "id"      shift, and go to state 14

    typename                go to state 221
    standard_type           go to state 18
    member_or_method        go to state 276
    member                  go to state 223
    var_declaration         go to state 224
    anonymous_union         go to state 225
    method                  go to state 226
    short_func_declaration  go to state 227
    short_par_func_header   go to state 22
    func_header_start       go to state 228
    nopar_func_header       go to state 229


state 220

   90 anonymous_union: "union" . union_body ";"

    "{"  shift, and go to state 59

    union_body  go to state 277


state 221

   85 var_declaration: typename . variabledefs ";"
   86                | typename . variabledefs error
   99 func_header_start: typename . listspec "id"

    "list"  shift, and go to state 40

    $default  reduce using rule 20 (listspec)

    listspec      go to state 278
    variabledefs  go to state 143
    variabledef   go to state 144


state 222

   76 members_methods: access member_or_method .

    $default  reduce using rule 76 (members_methods)


state 223

   81 member_or_method: member .

    $default  reduce using rule 81 (member_or_method)


state 224

   83 member: var_declaration .

    $default  reduce using rule 83 (member)


state 225

   84 member: anonymous_union .

    $default  reduce using rule 84 (member)


state 226

   82 member_or_method: method .

    $default  reduce using rule 82 (member_or_method)


state 227

   95 method: short_func_declaration .

    $default  reduce using rule 95 (method)


state 228

   98 short_par_func_header: func_header_start . "(" parameter_types ")"
  104 nopar_func_header: func_header_start . "(" ")"

    "("  shift, and go to state 279


state 229

   97 short_func_declaration: nopar_func_header . ";"

    ";"  shift, and go to state 47


state 230

   86 var_declaration: typename variabledefs error .

    $default  reduce using rule 86 (var_declaration)


state 231

   85 var_declaration: typename variabledefs ";" .

    $default  reduce using rule 85 (var_declaration)


state 232

   87 variabledefs: variabledefs "," . variabledef

    "list"  shift, and go to state 40

    $default  reduce using rule 20 (listspec)

    listspec     go to state 118
    variabledef  go to state 280


state 233

   27 id_list: id_list "," "id" . initializer

    "="  shift, and go to state 65

    $default  reduce using rule 30 (initializer)

    initializer  go to state 281


state 234

   23 dim: "[" "iconst" . "]"

    "]"  shift, and go to state 282


state 235

   24 dim: "[" "]" .

    $default  reduce using rule 24 (dim)


state 236

   46 expression: "length" "(" general_expression . ")"
   57 general_expression: general_expression . "," general_expression

    ")"  shift, and go to state 283
    ","  shift, and go to state 242


state 237

   47 expression: "new" "(" general_expression . ")"
   57 general_expression: general_expression . "," general_expression

    ")"  shift, and go to state 284
    ","  shift, and go to state 242


state 238

   54 variable: "listfunc" "(" general_expression . ")"
   57 general_expression: general_expression . "," general_expression

    ")"  shift, and go to state 285
    ","  shift, and go to state 242


state 239

   50 expression: "(" standard_type ")" .

    $default  reduce using rule 50 (expression)


state 240

   59 assignment: variable "=" . assignment

    error       shift, and go to state 159
    "static"    shift, and go to state 96
    "length"    shift, and go to state 97
    "new"       shift, and go to state 98
    "this"      shift, and go to state 99
    "iconst"    shift, and go to state 100
    "fconst"    shift, and go to state 101
    "cconst"    shift, and go to state 102
    "sconst"    shift, and go to state 103
    "+"         shift, and go to state 104
    "!"         shift, and go to state 105
    "++"        shift, and go to state 106
    "sizeop"    shift, and go to state 107
    "listfunc"  shift, and go to state 108
    "("         shift, and go to state 109
    "["         shift, and go to state 110

    "id"  reduce using rule 134 (decltype)

    expression      go to state 161
    variable        go to state 162
    assignment      go to state 286
    constant        go to state 115
    listexpression  go to state 116
    decltype        go to state 117


state 241

   49 expression: "(" general_expression ")" .

    $default  reduce using rule 49 (expression)


state 242

   57 general_expression: general_expression "," . general_expression

    error       shift, and go to state 159
    "static"    shift, and go to state 96
    "length"    shift, and go to state 97
    "new"       shift, and go to state 98
    "this"      shift, and go to state 99
    "iconst"    shift, and go to state 100
    "fconst"    shift, and go to state 101
    "cconst"    shift, and go to state 102
    "sconst"    shift, and go to state 103
    "+"         shift, and go to state 104
    "!"         shift, and go to state 105
    "++"        shift, and go to state 106
    "sizeop"    shift, and go to state 107
    "listfunc"  shift, and go to state 108
    "("         shift, and go to state 109
    "["         shift, and go to state 110

    "id"  reduce using rule 134 (decltype)

    expression          go to state 161
    variable            go to state 162
    general_expression  go to state 287
    assignment          go to state 164
    constant            go to state 115
    listexpression      go to state 116
    decltype            go to state 117


state 243

   68 listexpression: "[" expression_list "]" .

    $default  reduce using rule 68 (listexpression)


state 244

   69 init_values: init_values "," . init_value

    "static"    shift, and go to state 96
    "length"    shift, and go to state 97
    "new"       shift, and go to state 98
    "this"      shift, and go to state 99
    "iconst"    shift, and go to state 100
    "fconst"    shift, and go to state 101
    "cconst"    shift, and go to state 102
    "sconst"    shift, and go to state 103
    "+"         shift, and go to state 104
    "!"         shift, and go to state 105
    "++"        shift, and go to state 106
    "sizeop"    shift, and go to state 107
    "listfunc"  shift, and go to state 108
    "("         shift, and go to state 109
    "["         shift, and go to state 110
    "{"         shift, and go to state 111

    $default  reduce using rule 134 (decltype)

    init_value      go to state 288
    expression      go to state 113
    variable        go to state 114
    constant        go to state 115
    listexpression  go to state 116
    decltype        go to state 117


state 245

   32 init_value: "{" init_values "}" .

    $default  reduce using rule 32 (init_value)


state 246

   33 expression: expression . "||" expression
   33           | expression "||" expression .
   34           | expression . "&&" expression
   35           | expression . "==" expression
   36           | expression . ">" expression
   37           | expression . "+" expression
   38           | expression . "*" expression

    "&&"  shift, and go to state 170
    "=="  shift, and go to state 171
    ">"   shift, and go to state 172
    "+"   shift, and go to state 173
    "*"   shift, and go to state 174

    $default  reduce using rule 33 (expression)


state 247

   33 expression: expression . "||" expression
   34           | expression . "&&" expression
   34           | expression "&&" expression .
   35           | expression . "==" expression
   36           | expression . ">" expression
   37           | expression . "+" expression
   38           | expression . "*" expression

    "=="  shift, and go to state 171
    ">"   shift, and go to state 172
    "+"   shift, and go to state 173
    "*"   shift, and go to state 174

    $default  reduce using rule 34 (expression)


state 248

   33 expression: expression . "||" expression
   34           | expression . "&&" expression
   35           | expression . "==" expression
   35           | expression "==" expression .
   36           | expression . ">" expression
   37           | expression . "+" expression
   38           | expression . "*" expression

    ">"  shift, and go to state 172
    "+"  shift, and go to state 173
    "*"  shift, and go to state 174

    $default  reduce using rule 35 (expression)


state 249

   33 expression: expression . "||" expression
   34           | expression . "&&" expression
   35           | expression . "==" expression
   36           | expression . ">" expression
   36           | expression ">" expression .
   37           | expression . "+" expression
   38           | expression . "*" expression

    "+"  shift, and go to state 173
    "*"  shift, and go to state 174

    $default  reduce using rule 36 (expression)


state 250

   33 expression: expression . "||" expression
   34           | expression . "&&" expression
   35           | expression . "==" expression
   36           | expression . ">" expression
   37           | expression . "+" expression
   37           | expression "+" expression .
   38           | expression . "*" expression

    "*"  shift, and go to state 174

    $default  reduce using rule 37 (expression)


state 251

   33 expression: expression . "||" expression
   34           | expression . "&&" expression
   35           | expression . "==" expression
   36           | expression . ">" expression
   37           | expression . "+" expression
   38           | expression . "*" expression
   38           | expression "*" expression .

    $default  reduce using rule 38 (expression)


state 252

   45 expression: variable "(" expression_list . ")"

    ")"  shift, and go to state 289


state 253

   53 variable: variable "." "id" .

    $default  reduce using rule 53 (variable)


state 254

   52 variable: variable "[" general_expression . "]"
   57 general_expression: general_expression . "," general_expression

    ","  shift, and go to state 242
    "]"  shift, and go to state 290


state 255

  102 pass_list_dims: "refer" .

    $default  reduce using rule 102 (pass_list_dims)


state 256

  103 pass_list_dims: listspec . dims

    $default  reduce using rule 22 (dims)

    dims  go to state 182


state 257

  100 parameter_types: parameter_types "," typename pass_list_dims .

    $default  reduce using rule 100 (parameter_types)


state 258

  123 parameter_list: parameter_list "," typename pass_variabledef .

    $default  reduce using rule 123 (parameter_list)


state 259

  149 expression_statement: error ";" .

    $default  reduce using rule 149 (expression_statement)


state 260

  145 statement: "continue" ";" .

    $default  reduce using rule 145 (statement)


state 261

  146 statement: "break" ";" .

    $default  reduce using rule 146 (statement)


state 262

  151 if_statement: "if" "(" . general_expression ")" $@4 statement if_tail

    error       shift, and go to state 159
    "static"    shift, and go to state 96
    "length"    shift, and go to state 97
    "new"       shift, and go to state 98
    "this"      shift, and go to state 99
    "iconst"    shift, and go to state 100
    "fconst"    shift, and go to state 101
    "cconst"    shift, and go to state 102
    "sconst"    shift, and go to state 103
    "+"         shift, and go to state 104
    "!"         shift, and go to state 105
    "++"        shift, and go to state 106
    "sizeop"    shift, and go to state 107
    "listfunc"  shift, and go to state 108
    "("         shift, and go to state 109
    "["         shift, and go to state 110

    "id"  reduce using rule 134 (decltype)

    expression          go to state 161
    variable            go to state 162
    general_expression  go to state 291
    assignment          go to state 164
    constant            go to state 115
    listexpression      go to state 116
    decltype            go to state 117


state 263

  155 while_statement: "while" "(" . general_expression ")" $@5 statement

    error       shift, and go to state 159
    "static"    shift, and go to state 96
    "length"    shift, and go to state 97
    "new"       shift, and go to state 98
    "this"      shift, and go to state 99
    "iconst"    shift, and go to state 100
    "fconst"    shift, and go to state 101
    "cconst"    shift, and go to state 102
    "sconst"    shift, and go to state 103
    "+"         shift, and go to state 104
    "!"         shift, and go to state 105
    "++"        shift, and go to state 106
    "sizeop"    shift, and go to state 107
    "listfunc"  shift, and go to state 108
    "("         shift, and go to state 109
    "["         shift, and go to state 110

    "id"  reduce using rule 134 (decltype)

    expression          go to state 161
    variable            go to state 162
    general_expression  go to state 292
    assignment          go to state 164
    constant            go to state 115
    listexpression      go to state 116
    decltype            go to state 117


state 264

  157 for_statement: "for" "(" . optexpr ";" optexpr ";" optexpr ")" $@6 statement

    error       shift, and go to state 159
    "static"    shift, and go to state 96
    "length"    shift, and go to state 97
    "new"       shift, and go to state 98
    "this"      shift, and go to state 99
    "iconst"    shift, and go to state 100
    "fconst"    shift, and go to state 101
    "cconst"    shift, and go to state 102
    "sconst"    shift, and go to state 103
    "+"         shift, and go to state 104
    "!"         shift, and go to state 105
    "++"        shift, and go to state 106
    "sizeop"    shift, and go to state 107
    "listfunc"  shift, and go to state 108
    "("         shift, and go to state 109
    "["         shift, and go to state 110

    "id"  reduce using rule 134 (decltype)
    ";"   reduce using rule 159 (optexpr)

    expression          go to state 161
    variable            go to state 162
    general_expression  go to state 266
    assignment          go to state 164
    constant            go to state 115
    listexpression      go to state 116
    decltype            go to state 117
    optexpr             go to state 293


state 265

  161 switch_statement: "switch" "(" . general_expression ")" $@7 switch_tail

    error       shift, and go to state 159
    "static"    shift, and go to state 96
    "length"    shift, and go to state 97
    "new"       shift, and go to state 98
    "this"      shift, and go to state 99
    "iconst"    shift, and go to state 100
    "fconst"    shift, and go to state 101
    "cconst"    shift, and go to state 102
    "sconst"    shift, and go to state 103
    "+"         shift, and go to state 104
    "!"         shift, and go to state 105
    "++"        shift, and go to state 106
    "sizeop"    shift, and go to state 107
    "listfunc"  shift, and go to state 108
    "("         shift, and go to state 109
    "["         shift, and go to state 110

    "id"  reduce using rule 134 (decltype)

    expression          go to state 161
    variable            go to state 162
    general_expression  go to state 294
    assignment          go to state 164
    constant            go to state 115
    listexpression      go to state 116
    decltype            go to state 117


state 266

   57 general_expression: general_expression . "," general_expression
  158 optexpr: general_expression .

    ","  shift, and go to state 242

    $default  reduce using rule 158 (optexpr)


state 267

  175 return_statement: "return" optexpr . ";"

    ";"  shift, and go to state 295


state 268

  176 io_statement: "cin" "<<" . in_list ";"

    "static"    shift, and go to state 96
    "this"      shift, and go to state 99
    "listfunc"  shift, and go to state 108

    $default  reduce using rule 134 (decltype)

    variable  go to state 296
    decltype  go to state 117
    in_list   go to state 297
    in_item   go to state 298


state 269

  177 io_statement: "cout" ">>" . out_list ";"

    error       shift, and go to state 159
    "static"    shift, and go to state 96
    "length"    shift, and go to state 97
    "new"       shift, and go to state 98
    "this"      shift, and go to state 99
    "iconst"    shift, and go to state 100
    "fconst"    shift, and go to state 101
    "cconst"    shift, and go to state 102
    "sconst"    shift, and go to state 103
    "+"         shift, and go to state 104
    "!"         shift, and go to state 105
    "++"        shift, and go to state 106
    "sizeop"    shift, and go to state 107
    "listfunc"  shift, and go to state 108
    "("         shift, and go to state 109
    "["         shift, and go to state 110

    "id"  reduce using rule 134 (decltype)

    expression          go to state 161
    variable            go to state 162
    general_expression  go to state 299
    assignment          go to state 164
    constant            go to state 115
    listexpression      go to state 116
    decltype            go to state 117
    out_list            go to state 300
    out_item            go to state 301


state 270

  185 comp_statement: "{" $@8 . decl_statements "}"

    "static"  shift, and go to state 96

    "}"       reduce using rule 130 (decl_statements)
    $default  reduce using rule 134 (decltype)

    decl_statements  go to state 302
    declarations     go to state 130
    decltype         go to state 131


state 271

  148 expression_statement: general_expression ";" .

    $default  reduce using rule 148 (expression_statement)


state 272

   13 typename: "id" .
   55 variable: decltype "id" .

    "list"    reduce using rule 13 (typename)
    "id"      reduce using rule 13 (typename)
    $default  reduce using rule 55 (variable)


state 273

  131 declarations: declarations decltype typename . variabledefs ";"

    "list"  shift, and go to state 40

    $default  reduce using rule 20 (listspec)

    listspec      go to state 118
    variabledefs  go to state 303
    variabledef   go to state 144


state 274

  135 statements: statements statement .

    $default  reduce using rule 135 (statements)


state 275

   87 variabledefs: variabledefs . "," variabledef
  132 declarations: decltype typename variabledefs . ";"

    ";"  shift, and go to state 304
    ","  shift, and go to state 232


state 276

   75 members_methods: members_methods access member_or_method .

    $default  reduce using rule 75 (members_methods)


state 277

   90 anonymous_union: "union" union_body . ";"

    ";"  shift, and go to state 305


state 278

   89 variabledef: listspec . "id" dims
   99 func_header_start: typename listspec . "id"

    "id"  shift, and go to state 306


state 279

   98 short_par_func_header: func_header_start "(" . parameter_types ")"
  104 nopar_func_header: func_header_start "(" . ")"

    "char"    shift, and go to state 6
    "int"     shift, and go to state 34
    "float"   shift, and go to state 8
    "string"  shift, and go to state 9
    "void"    shift, and go to state 11
    "id"      shift, and go to state 14
    ")"       shift, and go to state 69

    typename         go to state 307
    standard_type    go to state 18
    parameter_types  go to state 71


state 280

   87 variabledefs: variabledefs "," variabledef .

    $default  reduce using rule 87 (variabledefs)


state 281

   27 id_list: id_list "," "id" initializer .

    $default  reduce using rule 27 (id_list)


state 282

   23 dim: "[" "iconst" "]" .

    $default  reduce using rule 23 (dim)


state 283

   46 expression: "length" "(" general_expression ")" .

    $default  reduce using rule 46 (expression)


state 284

   47 expression: "new" "(" general_expression ")" .

    $default  reduce using rule 47 (expression)


state 285

   54 variable: "listfunc" "(" general_expression ")" .

    $default  reduce using rule 54 (variable)


state 286

   59 assignment: variable "=" assignment .

    $default  reduce using rule 59 (assignment)


state 287

   57 general_expression: general_expression . "," general_expression
   57                   | general_expression "," general_expression .

    $default  reduce using rule 57 (general_expression)


state 288

   69 init_values: init_values "," init_value .

    $default  reduce using rule 69 (init_values)


state 289

   45 expression: variable "(" expression_list ")" .

    $default  reduce using rule 45 (expression)


state 290

   52 variable: variable "[" general_expression "]" .

    $default  reduce using rule 52 (variable)


state 291

   57 general_expression: general_expression . "," general_expression
  151 if_statement: "if" "(" general_expression . ")" $@4 statement if_tail

    ")"  shift, and go to state 308
    ","  shift, and go to state 242


state 292

   57 general_expression: general_expression . "," general_expression
  155 while_statement: "while" "(" general_expression . ")" $@5 statement

    ")"  shift, and go to state 309
    ","  shift, and go to state 242


state 293

  157 for_statement: "for" "(" optexpr . ";" optexpr ";" optexpr ")" $@6 statement

    ";"  shift, and go to state 310


state 294

   57 general_expression: general_expression . "," general_expression
  161 switch_statement: "switch" "(" general_expression . ")" $@7 switch_tail

    ")"  shift, and go to state 311
    ","  shift, and go to state 242


state 295

  175 return_statement: "return" optexpr ";" .

    $default  reduce using rule 175 (return_statement)


state 296

   52 variable: variable . "[" general_expression "]"
   53         | variable . "." "id"
  180 in_item: variable .

    "."  shift, and go to state 177
    "["  shift, and go to state 178

    $default  reduce using rule 180 (in_item)


state 297

  176 io_statement: "cin" "<<" in_list . ";"
  178 in_list: in_list . "<<" in_item

    ";"   shift, and go to state 312
    "<<"  shift, and go to state 313


state 298

  179 in_list: in_item .

    $default  reduce using rule 179 (in_list)


state 299

   57 general_expression: general_expression . "," general_expression
  183 out_item: general_expression .

    ","  shift, and go to state 242

    $default  reduce using rule 183 (out_item)


state 300

  177 io_statement: "cout" ">>" out_list . ";"
  181 out_list: out_list . ">>" out_item

    ";"   shift, and go to state 314
    ">>"  shift, and go to state 315


state 301

  182 out_list: out_item .

    $default  reduce using rule 182 (out_list)


state 302

  185 comp_statement: "{" $@8 decl_statements . "}"

    "}"  shift, and go to state 316


state 303

   87 variabledefs: variabledefs . "," variabledef
  131 declarations: declarations decltype typename variabledefs . ";"

    ";"  shift, and go to state 317
    ","  shift, and go to state 232


state 304

  132 declarations: decltype typename variabledefs ";" .

    $default  reduce using rule 132 (declarations)


state 305

   90 anonymous_union: "union" union_body ";" .

    $default  reduce using rule 90 (anonymous_union)


state 306

   89 variabledef: listspec "id" . dims
   99 func_header_start: typename listspec "id" .

    "("       reduce using rule 99 (func_header_start)
    $default  reduce using rule 22 (dims)

    dims  go to state 94


state 307

  101 parameter_types: typename . pass_list_dims

    "list"   shift, and go to state 40
    "refer"  shift, and go to state 255

    $default  reduce using rule 20 (listspec)

    listspec        go to state 256
    pass_list_dims  go to state 123


state 308

  151 if_statement: "if" "(" general_expression ")" . $@4 statement if_tail

    $default  reduce using rule 150 ($@4)

    $@4  go to state 318


state 309

  155 while_statement: "while" "(" general_expression ")" . $@5 statement

    $default  reduce using rule 154 ($@5)

    $@5  go to state 319


state 310

  157 for_statement: "for" "(" optexpr ";" . optexpr ";" optexpr ")" $@6 statement

    error       shift, and go to state 159
    "static"    shift, and go to state 96
    "length"    shift, and go to state 97
    "new"       shift, and go to state 98
    "this"      shift, and go to state 99
    "iconst"    shift, and go to state 100
    "fconst"    shift, and go to state 101
    "cconst"    shift, and go to state 102
    "sconst"    shift, and go to state 103
    "+"         shift, and go to state 104
    "!"         shift, and go to state 105
    "++"        shift, and go to state 106
    "sizeop"    shift, and go to state 107
    "listfunc"  shift, and go to state 108
    "("         shift, and go to state 109
    "["         shift, and go to state 110

    "id"  reduce using rule 134 (decltype)
    ";"   reduce using rule 159 (optexpr)

    expression          go to state 161
    variable            go to state 162
    general_expression  go to state 266
    assignment          go to state 164
    constant            go to state 115
    listexpression      go to state 116
    decltype            go to state 117
    optexpr             go to state 320


state 311

  161 switch_statement: "switch" "(" general_expression ")" . $@7 switch_tail

    $default  reduce using rule 160 ($@7)

    $@7  go to state 321


state 312

  176 io_statement: "cin" "<<" in_list ";" .

    $default  reduce using rule 176 (io_statement)


state 313

  178 in_list: in_list "<<" . in_item

    "static"    shift, and go to state 96
    "this"      shift, and go to state 99
    "listfunc"  shift, and go to state 108

    $default  reduce using rule 134 (decltype)

    variable  go to state 296
    decltype  go to state 117
    in_item   go to state 322


state 314

  177 io_statement: "cout" ">>" out_list ";" .

    $default  reduce using rule 177 (io_statement)


state 315

  181 out_list: out_list ">>" . out_item

    error       shift, and go to state 159
    "static"    shift, and go to state 96
    "length"    shift, and go to state 97
    "new"       shift, and go to state 98
    "this"      shift, and go to state 99
    "iconst"    shift, and go to state 100
    "fconst"    shift, and go to state 101
    "cconst"    shift, and go to state 102
    "sconst"    shift, and go to state 103
    "+"         shift, and go to state 104
    "!"         shift, and go to state 105
    "++"        shift, and go to state 106
    "sizeop"    shift, and go to state 107
    "listfunc"  shift, and go to state 108
    "("         shift, and go to state 109
    "["         shift, and go to state 110

    "id"  reduce using rule 134 (decltype)

    expression          go to state 161
    variable            go to state 162
    general_expression  go to state 299
    assignment          go to state 164
    constant            go to state 115
    listexpression      go to state 116
    decltype            go to state 117
    out_item            go to state 323


state 316

  185 comp_statement: "{" $@8 decl_statements "}" .

    $default  reduce using rule 185 (comp_statement)


state 317

  131 declarations: declarations decltype typename variabledefs ";" .

    $default  reduce using rule 131 (declarations)


state 318

  151 if_statement: "if" "(" general_expression ")" $@4 . statement if_tail

    error       shift, and go to state 186
    "static"    shift, and go to state 96
    "continue"  shift, and go to state 187
    "break"     shift, and go to state 188
    "if"        shift, and go to state 189
    "while"     shift, and go to state 190
    "for"       shift, and go to state 191
    "switch"    shift, and go to state 192
    "return"    shift, and go to state 193
    "length"    shift, and go to state 97
    "new"       shift, and go to state 98
    "cin"       shift, and go to state 194
    "cout"      shift, and go to state 195
    "this"      shift, and go to state 99
    "iconst"    shift, and go to state 100
    "fconst"    shift, and go to state 101
    "cconst"    shift, and go to state 102
    "sconst"    shift, and go to state 103
    "+"         shift, and go to state 104
    "!"         shift, and go to state 105
    "++"        shift, and go to state 106
    "sizeop"    shift, and go to state 107
    "listfunc"  shift, and go to state 108
    "("         shift, and go to state 109
    ";"         shift, and go to state 196
    "["         shift, and go to state 110
    "{"         shift, and go to state 197

    "id"  reduce using rule 134 (decltype)

    expression            go to state 161
    variable              go to state 162
    general_expression    go to state 198
    assignment            go to state 164
    constant              go to state 115
    listexpression        go to state 116
    decltype              go to state 117
    statement             go to state 324
    expression_statement  go to state 202
    if_statement          go to state 203
    while_statement       go to state 204
    for_statement         go to state 205
    switch_statement      go to state 206
    return_statement      go to state 207
    io_statement          go to state 208
    comp_statement        go to state 209


state 319

  155 while_statement: "while" "(" general_expression ")" $@5 . statement

    error       shift, and go to state 186
    "static"    shift, and go to state 96
    "continue"  shift, and go to state 187
    "break"     shift, and go to state 188
    "if"        shift, and go to state 189
    "while"     shift, and go to state 190
    "for"       shift, and go to state 191
    "switch"    shift, and go to state 192
    "return"    shift, and go to state 193
    "length"    shift, and go to state 97
    "new"       shift, and go to state 98
    "cin"       shift, and go to state 194
    "cout"      shift, and go to state 195
    "this"      shift, and go to state 99
    "iconst"    shift, and go to state 100
    "fconst"    shift, and go to state 101
    "cconst"    shift, and go to state 102
    "sconst"    shift, and go to state 103
    "+"         shift, and go to state 104
    "!"         shift, and go to state 105
    "++"        shift, and go to state 106
    "sizeop"    shift, and go to state 107
    "listfunc"  shift, and go to state 108
    "("         shift, and go to state 109
    ";"         shift, and go to state 196
    "["         shift, and go to state 110
    "{"         shift, and go to state 197

    "id"  reduce using rule 134 (decltype)

    expression            go to state 161
    variable              go to state 162
    general_expression    go to state 198
    assignment            go to state 164
    constant              go to state 115
    listexpression        go to state 116
    decltype              go to state 117
    statement             go to state 325
    expression_statement  go to state 202
    if_statement          go to state 203
    while_statement       go to state 204
    for_statement         go to state 205
    switch_statement      go to state 206
    return_statement      go to state 207
    io_statement          go to state 208
    comp_statement        go to state 209


state 320

  157 for_statement: "for" "(" optexpr ";" optexpr . ";" optexpr ")" $@6 statement

    ";"  shift, and go to state 326


state 321

  161 switch_statement: "switch" "(" general_expression ")" $@7 . switch_tail

    "case"  shift, and go to state 327
    "{"     shift, and go to state 328

    switch_tail           go to state 329
    single_casestatement  go to state 330


state 322

  178 in_list: in_list "<<" in_item .

    $default  reduce using rule 178 (in_list)


state 323

  181 out_list: out_list ">>" out_item .

    $default  reduce using rule 181 (out_list)


state 324

  151 if_statement: "if" "(" general_expression ")" $@4 statement . if_tail

    "else"  shift, and go to state 331

    $default  reduce using rule 153 (if_tail)

    if_tail  go to state 332


state 325

  155 while_statement: "while" "(" general_expression ")" $@5 statement .

    $default  reduce using rule 155 (while_statement)


state 326

  157 for_statement: "for" "(" optexpr ";" optexpr ";" . optexpr ")" $@6 statement

    error       shift, and go to state 159
    "static"    shift, and go to state 96
    "length"    shift, and go to state 97
    "new"       shift, and go to state 98
    "this"      shift, and go to state 99
    "iconst"    shift, and go to state 100
    "fconst"    shift, and go to state 101
    "cconst"    shift, and go to state 102
    "sconst"    shift, and go to state 103
    "+"         shift, and go to state 104
    "!"         shift, and go to state 105
    "++"        shift, and go to state 106
    "sizeop"    shift, and go to state 107
    "listfunc"  shift, and go to state 108
    "("         shift, and go to state 109
    "["         shift, and go to state 110

    "id"  reduce using rule 134 (decltype)
    ")"   reduce using rule 159 (optexpr)

    expression          go to state 161
    variable            go to state 162
    general_expression  go to state 266
    assignment          go to state 164
    constant            go to state 115
    listexpression      go to state 116
    decltype            go to state 117
    optexpr             go to state 333


state 327

  173 single_casestatement: "case" . constant ":" single_casestatement
  174                     | "case" . constant ":" statement

    "iconst"  shift, and go to state 100
    "fconst"  shift, and go to state 101
    "cconst"  shift, and go to state 102
    "sconst"  shift, and go to state 103

    constant  go to state 334


state 328

  162 switch_tail: "{" . decl_cases "}"

    "static"   shift, and go to state 96
    "case"     shift, and go to state 335
    "default"  shift, and go to state 336

    "}"       reduce using rule 167 (decl_cases)
    $default  reduce using rule 134 (decltype)

    declarations    go to state 337
    decltype        go to state 131
    decl_cases      go to state 338
    casestatements  go to state 339
    casestatement   go to state 340


state 329

  161 switch_statement: "switch" "(" general_expression ")" $@7 switch_tail .

    $default  reduce using rule 161 (switch_statement)


state 330

  163 switch_tail: single_casestatement .

    $default  reduce using rule 163 (switch_tail)


state 331

  152 if_tail: "else" . statement

    error       shift, and go to state 186
    "static"    shift, and go to state 96
    "continue"  shift, and go to state 187
    "break"     shift, and go to state 188
    "if"        shift, and go to state 189
    "while"     shift, and go to state 190
    "for"       shift, and go to state 191
    "switch"    shift, and go to state 192
    "return"    shift, and go to state 193
    "length"    shift, and go to state 97
    "new"       shift, and go to state 98
    "cin"       shift, and go to state 194
    "cout"      shift, and go to state 195
    "this"      shift, and go to state 99
    "iconst"    shift, and go to state 100
    "fconst"    shift, and go to state 101
    "cconst"    shift, and go to state 102
    "sconst"    shift, and go to state 103
    "+"         shift, and go to state 104
    "!"         shift, and go to state 105
    "++"        shift, and go to state 106
    "sizeop"    shift, and go to state 107
    "listfunc"  shift, and go to state 108
    "("         shift, and go to state 109
    ";"         shift, and go to state 196
    "["         shift, and go to state 110
    "{"         shift, and go to state 197

    "id"  reduce using rule 134 (decltype)

    expression            go to state 161
    variable              go to state 162
    general_expression    go to state 198
    assignment            go to state 164
    constant              go to state 115
    listexpression        go to state 116
    decltype              go to state 117
    statement             go to state 341
    expression_statement  go to state 202
    if_statement          go to state 203
    while_statement       go to state 204
    for_statement         go to state 205
    switch_statement      go to state 206
    return_statement      go to state 207
    io_statement          go to state 208
    comp_statement        go to state 209


state 332

  151 if_statement: "if" "(" general_expression ")" $@4 statement if_tail .

    $default  reduce using rule 151 (if_statement)


state 333

  157 for_statement: "for" "(" optexpr ";" optexpr ";" optexpr . ")" $@6 statement

    ")"  shift, and go to state 342


state 334

  173 single_casestatement: "case" constant . ":" single_casestatement
  174                     | "case" constant . ":" statement

    ":"  shift, and go to state 343


state 335

  170 casestatement: "case" . constant ":" casestatement
  171              | "case" . constant ":" statements

    "iconst"  shift, and go to state 100
    "fconst"  shift, and go to state 101
    "cconst"  shift, and go to state 102
    "sconst"  shift, and go to state 103

    constant  go to state 344


state 336

  172 casestatement: "default" . ":" statements

    ":"  shift, and go to state 345


state 337

  131 declarations: declarations . decltype typename variabledefs ";"
  164 decl_cases: declarations . casestatements
  165           | declarations .

    "static"   shift, and go to state 96
    "case"     shift, and go to state 335
    "default"  shift, and go to state 336

    "}"       reduce using rule 165 (decl_cases)
    $default  reduce using rule 134 (decltype)

    decltype        go to state 346
    casestatements  go to state 347
    casestatement   go to state 340


state 338

  162 switch_tail: "{" decl_cases . "}"

    "}"  shift, and go to state 348


state 339

  166 decl_cases: casestatements .
  168 casestatements: casestatements . casestatement

    "case"     shift, and go to state 335
    "default"  shift, and go to state 336

    $default  reduce using rule 166 (decl_cases)

    casestatement  go to state 349


state 340

  169 casestatements: casestatement .

    $default  reduce using rule 169 (casestatements)


state 341

  152 if_tail: "else" statement .

    $default  reduce using rule 152 (if_tail)


state 342

  157 for_statement: "for" "(" optexpr ";" optexpr ";" optexpr ")" . $@6 statement

    $default  reduce using rule 156 ($@6)

    $@6  go to state 350


state 343

  173 single_casestatement: "case" constant ":" . single_casestatement
  174                     | "case" constant ":" . statement

    error       shift, and go to state 186
    "static"    shift, and go to state 96
    "continue"  shift, and go to state 187
    "break"     shift, and go to state 188
    "if"        shift, and go to state 189
    "while"     shift, and go to state 190
    "for"       shift, and go to state 191
    "switch"    shift, and go to state 192
    "case"      shift, and go to state 327
    "return"    shift, and go to state 193
    "length"    shift, and go to state 97
    "new"       shift, and go to state 98
    "cin"       shift, and go to state 194
    "cout"      shift, and go to state 195
    "this"      shift, and go to state 99
    "iconst"    shift, and go to state 100
    "fconst"    shift, and go to state 101
    "cconst"    shift, and go to state 102
    "sconst"    shift, and go to state 103
    "+"         shift, and go to state 104
    "!"         shift, and go to state 105
    "++"        shift, and go to state 106
    "sizeop"    shift, and go to state 107
    "listfunc"  shift, and go to state 108
    "("         shift, and go to state 109
    ";"         shift, and go to state 196
    "["         shift, and go to state 110
    "{"         shift, and go to state 197

    "id"  reduce using rule 134 (decltype)

    expression            go to state 161
    variable              go to state 162
    general_expression    go to state 198
    assignment            go to state 164
    constant              go to state 115
    listexpression        go to state 116
    decltype              go to state 117
    statement             go to state 351
    expression_statement  go to state 202
    if_statement          go to state 203
    while_statement       go to state 204
    for_statement         go to state 205
    switch_statement      go to state 206
    single_casestatement  go to state 352
    return_statement      go to state 207
    io_statement          go to state 208
    comp_statement        go to state 209


state 344

  170 casestatement: "case" constant . ":" casestatement
  171              | "case" constant . ":" statements

    ":"  shift, and go to state 353


state 345

  172 casestatement: "default" ":" . statements

    error       shift, and go to state 186
    "static"    shift, and go to state 96
    "continue"  shift, and go to state 187
    "break"     shift, and go to state 188
    "if"        shift, and go to state 189
    "while"     shift, and go to state 190
    "for"       shift, and go to state 191
    "switch"    shift, and go to state 192
    "return"    shift, and go to state 193
    "length"    shift, and go to state 97
    "new"       shift, and go to state 98
    "cin"       shift, and go to state 194
    "cout"      shift, and go to state 195
    "this"      shift, and go to state 99
    "iconst"    shift, and go to state 100
    "fconst"    shift, and go to state 101
    "cconst"    shift, and go to state 102
    "sconst"    shift, and go to state 103
    "+"         shift, and go to state 104
    "!"         shift, and go to state 105
    "++"        shift, and go to state 106
    "sizeop"    shift, and go to state 107
    "listfunc"  shift, and go to state 108
    "("         shift, and go to state 109
    ";"         shift, and go to state 196
    "["         shift, and go to state 110
    "{"         shift, and go to state 197

    "id"  reduce using rule 134 (decltype)

    expression            go to state 161
    variable              go to state 162
    general_expression    go to state 198
    assignment            go to state 164
    constant              go to state 115
    listexpression        go to state 116
    decltype              go to state 117
    statements            go to state 354
    statement             go to state 201
    expression_statement  go to state 202
    if_statement          go to state 203
    while_statement       go to state 204
    for_statement         go to state 205
    switch_statement      go to state 206
    return_statement      go to state 207
    io_statement          go to state 208
    comp_statement        go to state 209


state 346

  131 declarations: declarations decltype . typename variabledefs ";"

    "char"    shift, and go to state 6
    "int"     shift, and go to state 34
    "float"   shift, and go to state 8
    "string"  shift, and go to state 9
    "void"    shift, and go to state 11
    "id"      shift, and go to state 14

    typename       go to state 273
    standard_type  go to state 18


state 347

  164 decl_cases: declarations casestatements .
  168 casestatements: casestatements . casestatement

    "case"     shift, and go to state 335
    "default"  shift, and go to state 336

    $default  reduce using rule 164 (decl_cases)

    casestatement  go to state 349


state 348

  162 switch_tail: "{" decl_cases "}" .

    $default  reduce using rule 162 (switch_tail)


state 349

  168 casestatements: casestatements casestatement .

    $default  reduce using rule 168 (casestatements)


state 350

  157 for_statement: "for" "(" optexpr ";" optexpr ";" optexpr ")" $@6 . statement

    error       shift, and go to state 186
    "static"    shift, and go to state 96
    "continue"  shift, and go to state 187
    "break"     shift, and go to state 188
    "if"        shift, and go to state 189
    "while"     shift, and go to state 190
    "for"       shift, and go to state 191
    "switch"    shift, and go to state 192
    "return"    shift, and go to state 193
    "length"    shift, and go to state 97
    "new"       shift, and go to state 98
    "cin"       shift, and go to state 194
    "cout"      shift, and go to state 195
    "this"      shift, and go to state 99
    "iconst"    shift, and go to state 100
    "fconst"    shift, and go to state 101
    "cconst"    shift, and go to state 102
    "sconst"    shift, and go to state 103
    "+"         shift, and go to state 104
    "!"         shift, and go to state 105
    "++"        shift, and go to state 106
    "sizeop"    shift, and go to state 107
    "listfunc"  shift, and go to state 108
    "("         shift, and go to state 109
    ";"         shift, and go to state 196
    "["         shift, and go to state 110
    "{"         shift, and go to state 197

    "id"  reduce using rule 134 (decltype)

    expression            go to state 161
    variable              go to state 162
    general_expression    go to state 198
    assignment            go to state 164
    constant              go to state 115
    listexpression        go to state 116
    decltype              go to state 117
    statement             go to state 355
    expression_statement  go to state 202
    if_statement          go to state 203
    while_statement       go to state 204
    for_statement         go to state 205
    switch_statement      go to state 206
    return_statement      go to state 207
    io_statement          go to state 208
    comp_statement        go to state 209


state 351

  174 single_casestatement: "case" constant ":" statement .

    $default  reduce using rule 174 (single_casestatement)


state 352

  173 single_casestatement: "case" constant ":" single_casestatement .

    $default  reduce using rule 173 (single_casestatement)


state 353

  170 casestatement: "case" constant ":" . casestatement
  171              | "case" constant ":" . statements

    error       shift, and go to state 186
    "static"    shift, and go to state 96
    "continue"  shift, and go to state 187
    "break"     shift, and go to state 188
    "if"        shift, and go to state 189
    "while"     shift, and go to state 190
    "for"       shift, and go to state 191
    "switch"    shift, and go to state 192
    "case"      shift, and go to state 335
    "default"   shift, and go to state 336
    "return"    shift, and go to state 193
    "length"    shift, and go to state 97
    "new"       shift, and go to state 98
    "cin"       shift, and go to state 194
    "cout"      shift, and go to state 195
    "this"      shift, and go to state 99
    "iconst"    shift, and go to state 100
    "fconst"    shift, and go to state 101
    "cconst"    shift, and go to state 102
    "sconst"    shift, and go to state 103
    "+"         shift, and go to state 104
    "!"         shift, and go to state 105
    "++"        shift, and go to state 106
    "sizeop"    shift, and go to state 107
    "listfunc"  shift, and go to state 108
    "("         shift, and go to state 109
    ";"         shift, and go to state 196
    "["         shift, and go to state 110
    "{"         shift, and go to state 197

    "id"  reduce using rule 134 (decltype)

    expression            go to state 161
    variable              go to state 162
    general_expression    go to state 198
    assignment            go to state 164
    constant              go to state 115
    listexpression        go to state 116
    decltype              go to state 117
    statements            go to state 356
    statement             go to state 201
    expression_statement  go to state 202
    if_statement          go to state 203
    while_statement       go to state 204
    for_statement         go to state 205
    switch_statement      go to state 206
    casestatement         go to state 357
    return_statement      go to state 207
    io_statement          go to state 208
    comp_statement        go to state 209


state 354

  135 statements: statements . statement
  172 casestatement: "default" ":" statements .

    error       shift, and go to state 186
    "static"    shift, and go to state 96
    "continue"  shift, and go to state 187
    "break"     shift, and go to state 188
    "if"        shift, and go to state 189
    "while"     shift, and go to state 190
    "for"       shift, and go to state 191
    "switch"    shift, and go to state 192
    "return"    shift, and go to state 193
    "length"    shift, and go to state 97
    "new"       shift, and go to state 98
    "cin"       shift, and go to state 194
    "cout"      shift, and go to state 195
    "this"      shift, and go to state 99
    "iconst"    shift, and go to state 100
    "fconst"    shift, and go to state 101
    "cconst"    shift, and go to state 102
    "sconst"    shift, and go to state 103
    "+"         shift, and go to state 104
    "!"         shift, and go to state 105
    "++"        shift, and go to state 106
    "sizeop"    shift, and go to state 107
    "listfunc"  shift, and go to state 108
    "("         shift, and go to state 109
    ";"         shift, and go to state 196
    "["         shift, and go to state 110
    "{"         shift, and go to state 197

    "case"     reduce using rule 172 (casestatement)
    "default"  reduce using rule 172 (casestatement)
    "id"       reduce using rule 134 (decltype)
    "}"        reduce using rule 172 (casestatement)

    expression            go to state 161
    variable              go to state 162
    general_expression    go to state 198
    assignment            go to state 164
    constant              go to state 115
    listexpression        go to state 116
    decltype              go to state 117
    statement             go to state 274
    expression_statement  go to state 202
    if_statement          go to state 203
    while_statement       go to state 204
    for_statement         go to state 205
    switch_statement      go to state 206
    return_statement      go to state 207
    io_statement          go to state 208
    comp_statement        go to state 209


state 355

  157 for_statement: "for" "(" optexpr ";" optexpr ";" optexpr ")" $@6 statement .

    $default  reduce using rule 157 (for_statement)


state 356

  135 statements: statements . statement
  171 casestatement: "case" constant ":" statements .

    error       shift, and go to state 186
    "static"    shift, and go to state 96
    "continue"  shift, and go to state 187
    "break"     shift, and go to state 188
    "if"        shift, and go to state 189
    "while"     shift, and go to state 190
    "for"       shift, and go to state 191
    "switch"    shift, and go to state 192
    "return"    shift, and go to state 193
    "length"    shift, and go to state 97
    "new"       shift, and go to state 98
    "cin"       shift, and go to state 194
    "cout"      shift, and go to state 195
    "this"      shift, and go to state 99
    "iconst"    shift, and go to state 100
    "fconst"    shift, and go to state 101
    "cconst"    shift, and go to state 102
    "sconst"    shift, and go to state 103
    "+"         shift, and go to state 104
    "!"         shift, and go to state 105
    "++"        shift, and go to state 106
    "sizeop"    shift, and go to state 107
    "listfunc"  shift, and go to state 108
    "("         shift, and go to state 109
    ";"         shift, and go to state 196
    "["         shift, and go to state 110
    "{"         shift, and go to state 197

    "case"     reduce using rule 171 (casestatement)
    "default"  reduce using rule 171 (casestatement)
    "id"       reduce using rule 134 (decltype)
    "}"        reduce using rule 171 (casestatement)

    expression            go to state 161
    variable              go to state 162
    general_expression    go to state 198
    assignment            go to state 164
    constant              go to state 115
    listexpression        go to state 116
    decltype              go to state 117
    statement             go to state 274
    expression_statement  go to state 202
    if_statement          go to state 203
    while_statement       go to state 204
    for_statement         go to state 205
    switch_statement      go to state 206
    return_statement      go to state 207
    io_statement          go to state 208
    comp_statement        go to state 209


state 357

  170 casestatement: "case" constant ":" casestatement .

    $default  reduce using rule 170 (casestatement)
